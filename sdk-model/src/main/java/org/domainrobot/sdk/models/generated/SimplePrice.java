/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.domainrobot.sdk.models.generated.CurrencyRate;
import org.domainrobot.sdk.models.generated.Custom;
import org.domainrobot.sdk.models.generated.ExchangedPrice;
import org.domainrobot.sdk.models.generated.TimePeriod;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SimplePrice
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class SimplePrice {
  @JsonProperty("amount")
  private Double amount = null;

  @JsonProperty("netAmount")
  private Double netAmount = null;

  @JsonProperty("vatAmount")
  private Double vatAmount = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("price")
  private ExchangedPrice price = null;

  @JsonProperty("businessCase")
  private String businessCase = null;

  @JsonProperty("period")
  private TimePeriod period = null;

  @JsonProperty("customs")
  private List<Custom> customs = null;

  @JsonProperty("view")
  private CurrencyRate view = null;

  public SimplePrice amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * The gross amount of the calculation
   * @return amount
  **/
  @ApiModelProperty(value = "The gross amount of the calculation")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public SimplePrice netAmount(Double netAmount) {
    this.netAmount = netAmount;
    return this;
  }

   /**
   * The net amount of the calculation
   * @return netAmount
  **/
  @ApiModelProperty(value = "The net amount of the calculation")
  public Double getNetAmount() {
    return netAmount;
  }

  public void setNetAmount(Double netAmount) {
    this.netAmount = netAmount;
  }

  public SimplePrice vatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
    return this;
  }

   /**
   * The calculated vat amount
   * @return vatAmount
  **/
  @ApiModelProperty(value = "The calculated vat amount")
  public Double getVatAmount() {
    return vatAmount;
  }

  public void setVatAmount(Double vatAmount) {
    this.vatAmount = vatAmount;
  }

  public SimplePrice currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The billing currency
   * @return currency
  **/
  @ApiModelProperty(example = "EUR", value = "The billing currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public SimplePrice price(ExchangedPrice price) {
    this.price = price;
    return this;
  }

   /**
   * The price. Note the currency can be differ from the billing currency
   * @return price
  **/
  @Valid
  @ApiModelProperty(value = "The price. Note the currency can be differ from the billing currency")
  public ExchangedPrice getPrice() {
    return price;
  }

  public void setPrice(ExchangedPrice price) {
    this.price = price;
  }

  public SimplePrice businessCase(String businessCase) {
    this.businessCase = businessCase;
    return this;
  }

   /**
   * The business case
   * @return businessCase
  **/
  @ApiModelProperty(value = "The business case")
  public String getBusinessCase() {
    return businessCase;
  }

  public void setBusinessCase(String businessCase) {
    this.businessCase = businessCase;
  }

  public SimplePrice period(TimePeriod period) {
    this.period = period;
    return this;
  }

   /**
   * The period for the price calculation
   * @return period
  **/
  @Valid
  @ApiModelProperty(value = "The period for the price calculation")
  public TimePeriod getPeriod() {
    return period;
  }

  public void setPeriod(TimePeriod period) {
    this.period = period;
  }

  public SimplePrice customs(List<Custom> customs) {
    this.customs = customs;
    return this;
  }

  public SimplePrice addCustomsItem(Custom customsItem) {
    if (this.customs == null) {
      this.customs = new ArrayList<Custom>();
    }
    this.customs.add(customsItem);
    return this;
  }

   /**
   * Custom values,such as price class
   * @return customs
  **/
  @Valid
  @ApiModelProperty(value = "Custom values,such as price class")
  public List<Custom> getCustoms() {
    return customs;
  }

  public void setCustoms(List<Custom> customs) {
    this.customs = customs;
  }

  public SimplePrice view(CurrencyRate view) {
    this.view = view;
    return this;
  }

   /**
   * The currency rate for the view currency
   * @return view
  **/
  @Valid
  @ApiModelProperty(value = "The currency rate for the view currency")
  public CurrencyRate getView() {
    return view;
  }

  public void setView(CurrencyRate view) {
    this.view = view;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimplePrice simplePrice = (SimplePrice) o;
    return Objects.equals(this.amount, simplePrice.amount) &&
        Objects.equals(this.netAmount, simplePrice.netAmount) &&
        Objects.equals(this.vatAmount, simplePrice.vatAmount) &&
        Objects.equals(this.currency, simplePrice.currency) &&
        Objects.equals(this.price, simplePrice.price) &&
        Objects.equals(this.businessCase, simplePrice.businessCase) &&
        Objects.equals(this.period, simplePrice.period) &&
        Objects.equals(this.customs, simplePrice.customs) &&
        Objects.equals(this.view, simplePrice.view);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, netAmount, vatAmount, currency, price, businessCase, period, customs, view);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimplePrice {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    netAmount: ").append(toIndentedString(netAmount)).append("\n");
    sb.append("    vatAmount: ").append(toIndentedString(vatAmount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    businessCase: ").append(toIndentedString(businessCase)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    customs: ").append(toIndentedString(customs)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

