/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Soa
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class Soa {
  @JsonProperty("refresh")
  private Long refresh = null;

  @JsonProperty("retry")
  private Long retry = null;

  @JsonProperty("expire")
  private Long expire = null;

  @JsonProperty("ttl")
  private Long ttl = null;

  @JsonProperty("email")
  private String email = null;

  public Soa refresh(Long refresh) {
    this.refresh = refresh;
    return this;
  }

   /**
   * The seconds after the secondary should refresh the zone data
   * @return refresh
  **/
  @ApiModelProperty(value = "The seconds after the secondary should refresh the zone data")
  public Long getRefresh() {
    return refresh;
  }

  public void setRefresh(Long refresh) {
    this.refresh = refresh;
  }

  public Soa retry(Long retry) {
    this.retry = retry;
    return this;
  }

   /**
   * The seconds after the secondary should retry the zone data after the refresh has been timeouts
   * @return retry
  **/
  @ApiModelProperty(value = "The seconds after the secondary should retry the zone data after the refresh has been timeouts")
  public Long getRetry() {
    return retry;
  }

  public void setRetry(Long retry) {
    this.retry = retry;
  }

  public Soa expire(Long expire) {
    this.expire = expire;
    return this;
  }

   /**
   * The seconds after the zone data will not be delievered, if the zone could not be reached on the master.
   * @return expire
  **/
  @ApiModelProperty(value = "The seconds after the zone data will not be delievered, if the zone could not be reached on the master.")
  public Long getExpire() {
    return expire;
  }

  public void setExpire(Long expire) {
    this.expire = expire;
  }

  public Soa ttl(Long ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return ttl
  **/
  @ApiModelProperty(value = "Lorem Ipsum")
  public Long getTtl() {
    return ttl;
  }

  public void setTtl(Long ttl) {
    this.ttl = ttl;
  }

  public Soa email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email address of the responsible of the zone
   * @return email
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The email address of the responsible of the zone")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Soa soa = (Soa) o;
    return Objects.equals(this.refresh, soa.refresh) &&
        Objects.equals(this.retry, soa.retry) &&
        Objects.equals(this.expire, soa.expire) &&
        Objects.equals(this.ttl, soa.ttl) &&
        Objects.equals(this.email, soa.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refresh, retry, expire, ttl, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Soa {\n");
    
    sb.append("    refresh: ").append(toIndentedString(refresh)).append("\n");
    sb.append("    retry: ").append(toIndentedString(retry)).append("\n");
    sb.append("    expire: ").append(toIndentedString(expire)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

