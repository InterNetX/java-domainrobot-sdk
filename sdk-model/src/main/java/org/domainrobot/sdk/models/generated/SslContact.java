/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.domainrobot.sdk.models.generated.BasicUser;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * SslContact
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class SslContact {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("fname")
  private String fname = null;

  @JsonProperty("lname")
  private String lname = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("fax")
  private String fax = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("organization")
  private String organization = null;

  @JsonProperty("address")
  private List<String> address = null;

  @JsonProperty("pcode")
  private String pcode = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("id")
  private Integer id = null;

  public SslContact created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public SslContact updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public SslContact fname(String fname) {
    this.fname = fname;
    return this;
  }

   /**
   * The first name of the contact
   * @return fname
  **/
  @ApiModelProperty(example = "John", value = "The first name of the contact")
  public String getFname() {
    return fname;
  }

  public void setFname(String fname) {
    this.fname = fname;
  }

  public SslContact lname(String lname) {
    this.lname = lname;
    return this;
  }

   /**
   * The last name of the contact
   * @return lname
  **/
  @ApiModelProperty(example = "Doe", value = "The last name of the contact")
  public String getLname() {
    return lname;
  }

  public void setLname(String lname) {
    this.lname = lname;
  }

  public SslContact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The phone number of the contact
   * @return phone
  **/
  @NotNull
  @ApiModelProperty(example = "+49-123-12345", required = true, value = "The phone number of the contact")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public SslContact fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * The fax number of the contact
   * @return fax
  **/
  @ApiModelProperty(example = "+49-123-12345", value = "The fax number of the contact")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public SslContact email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email of the contact
   * @return email
  **/
  @NotNull
  @ApiModelProperty(example = "john.doe@domain.com", required = true, value = "The email of the contact")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public SslContact title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the contact
   * @return title
  **/
  @NotNull
  @ApiModelProperty(example = "Dr.", required = true, value = "The title of the contact")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public SslContact organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * The name of the organization
   * @return organization
  **/
  @NotNull
  @ApiModelProperty(example = "Company", required = true, value = "The name of the organization")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public SslContact address(List<String> address) {
    this.address = address;
    return this;
  }

  public SslContact addAddressItem(String addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<String>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * The address of the contact.
   * @return address
  **/
  @ApiModelProperty(value = "The address of the contact.")
  public List<String> getAddress() {
    return address;
  }

  public void setAddress(List<String> address) {
    this.address = address;
  }

  public SslContact pcode(String pcode) {
    this.pcode = pcode;
    return this;
  }

   /**
   * The pcode of the contact
   * @return pcode
  **/
  @ApiModelProperty(example = "12345", value = "The pcode of the contact")
  public String getPcode() {
    return pcode;
  }

  public void setPcode(String pcode) {
    this.pcode = pcode;
  }

  public SslContact city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city of the contact
   * @return city
  **/
  @ApiModelProperty(example = "Anytown", value = "The city of the contact")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public SslContact country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The country of the contact
   * @return country
  **/
  @ApiModelProperty(example = "DE", value = "The country of the contact")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public SslContact state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The local country state of the contact
   * @return state
  **/
  @ApiModelProperty(example = "BY", value = "The local country state of the contact")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public SslContact owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public SslContact updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updating using of the object
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updating using of the object")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public SslContact id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the object
   * @return id
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Unique identifier of the object")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SslContact sslContact = (SslContact) o;
    return Objects.equals(this.created, sslContact.created) &&
        Objects.equals(this.updated, sslContact.updated) &&
        Objects.equals(this.fname, sslContact.fname) &&
        Objects.equals(this.lname, sslContact.lname) &&
        Objects.equals(this.phone, sslContact.phone) &&
        Objects.equals(this.fax, sslContact.fax) &&
        Objects.equals(this.email, sslContact.email) &&
        Objects.equals(this.title, sslContact.title) &&
        Objects.equals(this.organization, sslContact.organization) &&
        Objects.equals(this.address, sslContact.address) &&
        Objects.equals(this.pcode, sslContact.pcode) &&
        Objects.equals(this.city, sslContact.city) &&
        Objects.equals(this.country, sslContact.country) &&
        Objects.equals(this.state, sslContact.state) &&
        Objects.equals(this.owner, sslContact.owner) &&
        Objects.equals(this.updater, sslContact.updater) &&
        Objects.equals(this.id, sslContact.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, fname, lname, phone, fax, email, title, organization, address, pcode, city, country, state, owner, updater, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SslContact {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    fname: ").append(toIndentedString(fname)).append("\n");
    sb.append("    lname: ").append(toIndentedString(lname)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    pcode: ").append(toIndentedString(pcode)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

