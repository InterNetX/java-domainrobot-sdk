/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.BackupMx;
import org.domainrobot.sdk.models.generated.DomainMonitoring;
import org.domainrobot.sdk.models.generated.MailProxy;
import org.domainrobot.sdk.models.generated.Redirect;

import javax.validation.Valid;

/**
 * DomainServices
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class DomainServices {
  @JsonProperty("backupMx")
  private List<BackupMx> backupMx = null;

  @JsonProperty("mailProxy")
  private List<MailProxy> mailProxy = null;

  @JsonProperty("redirect")
  private List<Redirect> redirect = null;

  @JsonProperty("domainMonitoring")
  private List<DomainMonitoring> domainMonitoring = null;

  public DomainServices backupMx(List<BackupMx> backupMx) {
    this.backupMx = backupMx;
    return this;
  }

  public DomainServices addBackupMxItem(BackupMx backupMxItem) {
    if (this.backupMx == null) {
      this.backupMx = new ArrayList<BackupMx>();
    }
    this.backupMx.add(backupMxItem);
    return this;
  }

   /**
   * Removes pending services like BackupMX and MailProxy.
   * @return backupMx
  **/
  @Valid
  @ApiModelProperty(value = "Removes pending services like BackupMX and MailProxy.")
  public List<BackupMx> getBackupMx() {
    return backupMx;
  }

  public void setBackupMx(List<BackupMx> backupMx) {
    this.backupMx = backupMx;
  }

  public DomainServices mailProxy(List<MailProxy> mailProxy) {
    this.mailProxy = mailProxy;
    return this;
  }

  public DomainServices addMailProxyItem(MailProxy mailProxyItem) {
    if (this.mailProxy == null) {
      this.mailProxy = new ArrayList<MailProxy>();
    }
    this.mailProxy.add(mailProxyItem);
    return this;
  }

   /**
   * Removes pending services like BackupMX and MailProxy.
   * @return mailProxy
  **/
  @Valid
  @ApiModelProperty(value = "Removes pending services like BackupMX and MailProxy.")
  public List<MailProxy> getMailProxy() {
    return mailProxy;
  }

  public void setMailProxy(List<MailProxy> mailProxy) {
    this.mailProxy = mailProxy;
  }

  public DomainServices redirect(List<Redirect> redirect) {
    this.redirect = redirect;
    return this;
  }

  public DomainServices addRedirectItem(Redirect redirectItem) {
    if (this.redirect == null) {
      this.redirect = new ArrayList<Redirect>();
    }
    this.redirect.add(redirectItem);
    return this;
  }

   /**
   * Removes pending services like BackupMX and MailProxy.
   * @return redirect
  **/
  @Valid
  @ApiModelProperty(value = "Removes pending services like BackupMX and MailProxy.")
  public List<Redirect> getRedirect() {
    return redirect;
  }

  public void setRedirect(List<Redirect> redirect) {
    this.redirect = redirect;
  }

  public DomainServices domainMonitoring(List<DomainMonitoring> domainMonitoring) {
    this.domainMonitoring = domainMonitoring;
    return this;
  }

  public DomainServices addDomainMonitoringItem(DomainMonitoring domainMonitoringItem) {
    if (this.domainMonitoring == null) {
      this.domainMonitoring = new ArrayList<DomainMonitoring>();
    }
    this.domainMonitoring.add(domainMonitoringItem);
    return this;
  }

   /**
   * Removes pending services like BackupMX and MailProxy.
   * @return domainMonitoring
  **/
  @Valid
  @ApiModelProperty(value = "Removes pending services like BackupMX and MailProxy.")
  public List<DomainMonitoring> getDomainMonitoring() {
    return domainMonitoring;
  }

  public void setDomainMonitoring(List<DomainMonitoring> domainMonitoring) {
    this.domainMonitoring = domainMonitoring;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomainServices domainServices = (DomainServices) o;
    return Objects.equals(this.backupMx, domainServices.backupMx) &&
        Objects.equals(this.mailProxy, domainServices.mailProxy) &&
        Objects.equals(this.redirect, domainServices.redirect) &&
        Objects.equals(this.domainMonitoring, domainServices.domainMonitoring);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupMx, mailProxy, redirect, domainMonitoring);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomainServices {\n");
    
    sb.append("    backupMx: ").append(toIndentedString(backupMx)).append("\n");
    sb.append("    mailProxy: ").append(toIndentedString(mailProxy)).append("\n");
    sb.append("    redirect: ").append(toIndentedString(redirect)).append("\n");
    sb.append("    domainMonitoring: ").append(toIndentedString(domainMonitoring)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

