/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * GenericLabelEntity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class GenericLabelEntity {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("label")
  private String label = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("packageLabel")
  private String packageLabel = null;

  public GenericLabelEntity created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public GenericLabelEntity updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public GenericLabelEntity label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Lorem Ipum
   * @return label
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Lorem Ipum")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public GenericLabelEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the contract.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the contract.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public GenericLabelEntity packageLabel(String packageLabel) {
    this.packageLabel = packageLabel;
    return this;
  }

   /**
   * The related package label of the contract
   * @return packageLabel
  **/
  @ApiModelProperty(value = "The related package label of the contract")
  public String getPackageLabel() {
    return packageLabel;
  }

  public void setPackageLabel(String packageLabel) {
    this.packageLabel = packageLabel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenericLabelEntity genericLabelEntity = (GenericLabelEntity) o;
    return Objects.equals(this.created, genericLabelEntity.created) &&
        Objects.equals(this.updated, genericLabelEntity.updated) &&
        Objects.equals(this.label, genericLabelEntity.label) &&
        Objects.equals(this.name, genericLabelEntity.name) &&
        Objects.equals(this.packageLabel, genericLabelEntity.packageLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, label, name, packageLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenericLabelEntity {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageLabel: ").append(toIndentedString(packageLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

