/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * QueryView
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class QueryView {
  @JsonProperty("limit")
  private Integer limit = null;

  @JsonProperty("offset")
  private Integer offset = null;

  @JsonProperty("children")
  private Boolean children = null;

  @JsonProperty("from")
  private Date from = null;

  @JsonProperty("to")
  private Date to = null;

  public QueryView limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return limit
  **/
  @ApiModelProperty(value = "Lorem Ipsum")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public QueryView offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return offset
  **/
  @ApiModelProperty(value = "Lorem Ipsum")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public QueryView children(Boolean children) {
    this.children = children;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return children
  **/
  @ApiModelProperty(value = "Lorem Ipsum")
  public Boolean isChildren() {
    return children;
  }

  public void setChildren(Boolean children) {
    this.children = children;
  }

  public QueryView from(Date from) {
    this.from = from;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return from
  **/
  @Valid
  @ApiModelProperty(value = "Lorem Ipsum")
  public Date getFrom() {
    return from;
  }

  public void setFrom(Date from) {
    this.from = from;
  }

  public QueryView to(Date to) {
    this.to = to;
    return this;
  }

   /**
   * Lorem Ipsum
   * @return to
  **/
  @Valid
  @ApiModelProperty(value = "Lorem Ipsum")
  public Date getTo() {
    return to;
  }

  public void setTo(Date to) {
    this.to = to;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryView queryView = (QueryView) o;
    return Objects.equals(this.limit, queryView.limit) &&
        Objects.equals(this.offset, queryView.offset) &&
        Objects.equals(this.children, queryView.children) &&
        Objects.equals(this.from, queryView.from) &&
        Objects.equals(this.to, queryView.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, children, from, to);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryView {\n");
    
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

