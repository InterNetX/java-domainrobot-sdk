/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.domainrobot.sdk.models.generated.Account;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.Card;
import org.domainrobot.sdk.models.generated.ClearAccountPeriod;
import org.domainrobot.sdk.models.generated.Currency;
import org.domainrobot.sdk.models.generated.CustomerContract;
import org.domainrobot.sdk.models.generated.GenderConstants;
import org.domainrobot.sdk.models.generated.PaymentConstants;
import org.domainrobot.sdk.models.generated.Phone;
import org.domainrobot.sdk.models.generated.SEPAMandate;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Customer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class Customer {
  @JsonProperty("number")
  private Long number = null;

  @JsonProperty("client")
  private String client = null;

  @JsonProperty("group")
  private Long group = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("organization")
  private String organization = null;

  @JsonProperty("vatNumber")
  private String vatNumber = null;

  @JsonProperty("gender")
  private GenderConstants gender = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("addressLines")
  private List<String> addressLines = new ArrayList<String>();

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("fax")
  private Phone fax = null;

  @JsonProperty("emails")
  private List<String> emails = null;

  @JsonProperty("billingEmails")
  private List<String> billingEmails = null;

  @JsonProperty("payment")
  private PaymentConstants payment = null;

  @JsonProperty("paymentMode")
  private String paymentMode = null;

  @JsonProperty("paymentCurrency")
  private Currency paymentCurrency = null;

  @JsonProperty("invoiceLanguage")
  private String invoiceLanguage = null;

  @JsonProperty("taxable")
  private Boolean taxable = null;

  @JsonProperty("card")
  private Card card = null;

  @JsonProperty("contracts")
  private List<CustomerContract> contracts = null;

  @JsonProperty("billingUsers")
  private List<BasicUser> billingUsers = null;

  @JsonProperty("account")
  private Account account = null;

  @JsonProperty("clearAccount")
  private ClearAccountPeriod clearAccount = null;

  @JsonProperty("fname")
  private String fname = null;

  @JsonProperty("lname")
  private String lname = null;

  @JsonProperty("pcode")
  private String pcode = null;

  @JsonProperty("sepa")
  private SEPAMandate sepa = null;

  public Customer number(Long number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "")
  public Long getNumber() {
    return number;
  }

  public void setNumber(Long number) {
    this.number = number;
  }

  public Customer client(String client) {
    this.client = client;
    return this;
  }

   /**
   * Get client
   * @return client
  **/
  @NotNull
 @Size(min=1,max=2147483647)  @ApiModelProperty(required = true, value = "")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public Customer group(Long group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public Long getGroup() {
    return group;
  }

  public void setGroup(Long group) {
    this.group = group;
  }

  public Customer name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the customer.
   * @return name
  **/
  @NotNull
 @Size(min=0,max=255)  @ApiModelProperty(required = true, value = "The name of the customer.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Customer organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * The name of the organization.
   * @return organization
  **/
 @Size(min=0,max=70)  @ApiModelProperty(value = "The name of the organization.")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public Customer vatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
    return this;
  }

   /**
   * The value added tax number.
   * @return vatNumber
  **/
  @ApiModelProperty(value = "The value added tax number.")
  public String getVatNumber() {
    return vatNumber;
  }

  public void setVatNumber(String vatNumber) {
    this.vatNumber = vatNumber;
  }

  public Customer gender(GenderConstants gender) {
    this.gender = gender;
    return this;
  }

   /**
   * The gender of the person.
   * @return gender
  **/
  @Valid
  @ApiModelProperty(value = "The gender of the person.")
  public GenderConstants getGender() {
    return gender;
  }

  public void setGender(GenderConstants gender) {
    this.gender = gender;
  }

  public Customer title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the customer
   * @return title
  **/
  @ApiModelProperty(value = "The title of the customer")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Customer addressLines(List<String> addressLines) {
    this.addressLines = addressLines;
    return this;
  }

  public Customer addAddressLinesItem(String addressLinesItem) {
    this.addressLines.add(addressLinesItem);
    return this;
  }

   /**
   * The address of the customer
   * @return addressLines
  **/
  @NotNull
 @Size(min=1,max=2147483647)  @ApiModelProperty(required = true, value = "The address of the customer")
  public List<String> getAddressLines() {
    return addressLines;
  }

  public void setAddressLines(List<String> addressLines) {
    this.addressLines = addressLines;
  }

  public Customer city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city of the customer.
   * @return city
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The city of the customer.")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Customer state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The state of the customer.
   * @return state
  **/
  @ApiModelProperty(value = "The state of the customer.")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Customer country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The country of the customer.
   * @return country
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The country of the customer.")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Customer phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The phone number of the customer
   * @return phone
  **/
  @ApiModelProperty(example = "+49-123-12345", value = "The phone number of the customer")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Customer fax(Phone fax) {
    this.fax = fax;
    return this;
  }

   /**
   * The fax number.
   * @return fax
  **/
  @Valid
  @ApiModelProperty(value = "The fax number.")
  public Phone getFax() {
    return fax;
  }

  public void setFax(Phone fax) {
    this.fax = fax;
  }

  public Customer emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public Customer addEmailsItem(String emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<String>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * The email addresses.
   * @return emails
  **/
 @Size(min=1,max=2147483647)  @ApiModelProperty(value = "The email addresses.")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public Customer billingEmails(List<String> billingEmails) {
    this.billingEmails = billingEmails;
    return this;
  }

  public Customer addBillingEmailsItem(String billingEmailsItem) {
    if (this.billingEmails == null) {
      this.billingEmails = new ArrayList<String>();
    }
    this.billingEmails.add(billingEmailsItem);
    return this;
  }

   /**
   * The billing recipients.
   * @return billingEmails
  **/
  @ApiModelProperty(value = "The billing recipients.")
  public List<String> getBillingEmails() {
    return billingEmails;
  }

  public void setBillingEmails(List<String> billingEmails) {
    this.billingEmails = billingEmails;
  }

  public Customer payment(PaymentConstants payment) {
    this.payment = payment;
    return this;
  }

   /**
   * The payment typ of the customer.
   * @return payment
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The payment typ of the customer.")
  public PaymentConstants getPayment() {
    return payment;
  }

  public void setPayment(PaymentConstants payment) {
    this.payment = payment;
  }

  public Customer paymentMode(String paymentMode) {
    this.paymentMode = paymentMode;
    return this;
  }

   /**
   * The payment mode of the customer.
   * @return paymentMode
  **/
  @ApiModelProperty(value = "The payment mode of the customer.")
  public String getPaymentMode() {
    return paymentMode;
  }

  public void setPaymentMode(String paymentMode) {
    this.paymentMode = paymentMode;
  }

  public Customer paymentCurrency(Currency paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
    return this;
  }

   /**
   * The payment currency of the customer.
   * @return paymentCurrency
  **/
  @Valid
  @ApiModelProperty(value = "The payment currency of the customer.")
  public Currency getPaymentCurrency() {
    return paymentCurrency;
  }

  public void setPaymentCurrency(Currency paymentCurrency) {
    this.paymentCurrency = paymentCurrency;
  }

  public Customer invoiceLanguage(String invoiceLanguage) {
    this.invoiceLanguage = invoiceLanguage;
    return this;
  }

   /**
   * The language to use for the invoice.
   * @return invoiceLanguage
  **/
  @ApiModelProperty(value = "The language to use for the invoice.")
  public String getInvoiceLanguage() {
    return invoiceLanguage;
  }

  public void setInvoiceLanguage(String invoiceLanguage) {
    this.invoiceLanguage = invoiceLanguage;
  }

  public Customer taxable(Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

   /**
   * The taxable flag of the customer.
   * @return taxable
  **/
  @ApiModelProperty(value = "The taxable flag of the customer.")
  public Boolean isTaxable() {
    return taxable;
  }

  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }

  public Customer card(Card card) {
    this.card = card;
    return this;
  }

   /**
   * The customers minimal credit card data if payament was post with credit card.
   * @return card
  **/
  @Valid
  @ApiModelProperty(value = "The customers minimal credit card data if payament was post with credit card.")
  public Card getCard() {
    return card;
  }

  public void setCard(Card card) {
    this.card = card;
  }

  public Customer contracts(List<CustomerContract> contracts) {
    this.contracts = contracts;
    return this;
  }

  public Customer addContractsItem(CustomerContract contractsItem) {
    if (this.contracts == null) {
      this.contracts = new ArrayList<CustomerContract>();
    }
    this.contracts.add(contractsItem);
    return this;
  }

   /**
   * The customers contracts.
   * @return contracts
  **/
  @Valid
  @ApiModelProperty(value = "The customers contracts.")
  public List<CustomerContract> getContracts() {
    return contracts;
  }

  public void setContracts(List<CustomerContract> contracts) {
    this.contracts = contracts;
  }

  public Customer billingUsers(List<BasicUser> billingUsers) {
    this.billingUsers = billingUsers;
    return this;
  }

  public Customer addBillingUsersItem(BasicUser billingUsersItem) {
    if (this.billingUsers == null) {
      this.billingUsers = new ArrayList<BasicUser>();
    }
    this.billingUsers.add(billingUsersItem);
    return this;
  }

   /**
   * The billing users.
   * @return billingUsers
  **/
  @Valid
  @ApiModelProperty(value = "The billing users.")
  public List<BasicUser> getBillingUsers() {
    return billingUsers;
  }

  public void setBillingUsers(List<BasicUser> billingUsers) {
    this.billingUsers = billingUsers;
  }

  public Customer account(Account account) {
    this.account = account;
    return this;
  }

   /**
   * The account of the customer in case of prepayment or if the customer has a credit limit
   * @return account
  **/
  @Valid
  @ApiModelProperty(value = "The account of the customer in case of prepayment or if the customer has a credit limit")
  public Account getAccount() {
    return account;
  }

  public void setAccount(Account account) {
    this.account = account;
  }

  public Customer clearAccount(ClearAccountPeriod clearAccount) {
    this.clearAccount = clearAccount;
    return this;
  }

   /**
   * The period after the post payment account will be cleared to zero
   * @return clearAccount
  **/
  @Valid
  @ApiModelProperty(value = "The period after the post payment account will be cleared to zero")
  public ClearAccountPeriod getClearAccount() {
    return clearAccount;
  }

  public void setClearAccount(ClearAccountPeriod clearAccount) {
    this.clearAccount = clearAccount;
  }

  public Customer fname(String fname) {
    this.fname = fname;
    return this;
  }

   /**
   * The first name.
   * @return fname
  **/
 @Size(min=0,max=35)  @ApiModelProperty(value = "The first name.")
  public String getFname() {
    return fname;
  }

  public void setFname(String fname) {
    this.fname = fname;
  }

  public Customer lname(String lname) {
    this.lname = lname;
    return this;
  }

   /**
   * The last name.
   * @return lname
  **/
 @Size(min=0,max=35)  @ApiModelProperty(value = "The last name.")
  public String getLname() {
    return lname;
  }

  public void setLname(String lname) {
    this.lname = lname;
  }

  public Customer pcode(String pcode) {
    this.pcode = pcode;
    return this;
  }

   /**
   * The postal code of the city.
   * @return pcode
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The postal code of the city.")
  public String getPcode() {
    return pcode;
  }

  public void setPcode(String pcode) {
    this.pcode = pcode;
  }

  public Customer sepa(SEPAMandate sepa) {
    this.sepa = sepa;
    return this;
  }

   /**
   * The customers sepa mandate if payament was post with sepa.
   * @return sepa
  **/
  @Valid
  @ApiModelProperty(value = "The customers sepa mandate if payament was post with sepa.")
  public SEPAMandate getSepa() {
    return sepa;
  }

  public void setSepa(SEPAMandate sepa) {
    this.sepa = sepa;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.number, customer.number) &&
        Objects.equals(this.client, customer.client) &&
        Objects.equals(this.group, customer.group) &&
        Objects.equals(this.name, customer.name) &&
        Objects.equals(this.organization, customer.organization) &&
        Objects.equals(this.vatNumber, customer.vatNumber) &&
        Objects.equals(this.gender, customer.gender) &&
        Objects.equals(this.title, customer.title) &&
        Objects.equals(this.addressLines, customer.addressLines) &&
        Objects.equals(this.city, customer.city) &&
        Objects.equals(this.state, customer.state) &&
        Objects.equals(this.country, customer.country) &&
        Objects.equals(this.phone, customer.phone) &&
        Objects.equals(this.fax, customer.fax) &&
        Objects.equals(this.emails, customer.emails) &&
        Objects.equals(this.billingEmails, customer.billingEmails) &&
        Objects.equals(this.payment, customer.payment) &&
        Objects.equals(this.paymentMode, customer.paymentMode) &&
        Objects.equals(this.paymentCurrency, customer.paymentCurrency) &&
        Objects.equals(this.invoiceLanguage, customer.invoiceLanguage) &&
        Objects.equals(this.taxable, customer.taxable) &&
        Objects.equals(this.card, customer.card) &&
        Objects.equals(this.contracts, customer.contracts) &&
        Objects.equals(this.billingUsers, customer.billingUsers) &&
        Objects.equals(this.account, customer.account) &&
        Objects.equals(this.clearAccount, customer.clearAccount) &&
        Objects.equals(this.fname, customer.fname) &&
        Objects.equals(this.lname, customer.lname) &&
        Objects.equals(this.pcode, customer.pcode) &&
        Objects.equals(this.sepa, customer.sepa);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, client, group, name, organization, vatNumber, gender, title, addressLines, city, state, country, phone, fax, emails, billingEmails, payment, paymentMode, paymentCurrency, invoiceLanguage, taxable, card, contracts, billingUsers, account, clearAccount, fname, lname, pcode, sepa);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    vatNumber: ").append(toIndentedString(vatNumber)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    addressLines: ").append(toIndentedString(addressLines)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    billingEmails: ").append(toIndentedString(billingEmails)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    paymentMode: ").append(toIndentedString(paymentMode)).append("\n");
    sb.append("    paymentCurrency: ").append(toIndentedString(paymentCurrency)).append("\n");
    sb.append("    invoiceLanguage: ").append(toIndentedString(invoiceLanguage)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    contracts: ").append(toIndentedString(contracts)).append("\n");
    sb.append("    billingUsers: ").append(toIndentedString(billingUsers)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    clearAccount: ").append(toIndentedString(clearAccount)).append("\n");
    sb.append("    fname: ").append(toIndentedString(fname)).append("\n");
    sb.append("    lname: ").append(toIndentedString(lname)).append("\n");
    sb.append("    pcode: ").append(toIndentedString(pcode)).append("\n");
    sb.append("    sepa: ").append(toIndentedString(sepa)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

