/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.JobStatusConstants;

import javax.validation.Valid;

/**
 * WorkflowSpool
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class WorkflowSpool {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("status")
  private JobStatusConstants status = null;

  @JsonProperty("subStatus")
  private String subStatus = null;

  @JsonProperty("execution")
  private Date execution = null;

  @JsonProperty("id")
  private Long id = null;

  public WorkflowSpool created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public WorkflowSpool updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public WorkflowSpool owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public WorkflowSpool updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updater of the object.
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updater of the object.")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public WorkflowSpool status(JobStatusConstants status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the job.
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "The status of the job.")
  public JobStatusConstants getStatus() {
    return status;
  }

  public void setStatus(JobStatusConstants status) {
    this.status = status;
  }

  public WorkflowSpool subStatus(String subStatus) {
    this.subStatus = subStatus;
    return this;
  }

   /**
   * The substatus of the job.
   * @return subStatus
  **/
  @ApiModelProperty(value = "The substatus of the job.")
  public String getSubStatus() {
    return subStatus;
  }

  public void setSubStatus(String subStatus) {
    this.subStatus = subStatus;
  }

  public WorkflowSpool execution(Date execution) {
    this.execution = execution;
    return this;
  }

   /**
   * The next execution date of the job.
   * @return execution
  **/
  @Valid
  @ApiModelProperty(value = "The next execution date of the job.")
  public Date getExecution() {
    return execution;
  }

  public void setExecution(Date execution) {
    this.execution = execution;
  }

  public WorkflowSpool id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The job id.
   * @return id
  **/
  @ApiModelProperty(value = "The job id.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowSpool workflowSpool = (WorkflowSpool) o;
    return Objects.equals(this.created, workflowSpool.created) &&
        Objects.equals(this.updated, workflowSpool.updated) &&
        Objects.equals(this.owner, workflowSpool.owner) &&
        Objects.equals(this.updater, workflowSpool.updater) &&
        Objects.equals(this.status, workflowSpool.status) &&
        Objects.equals(this.subStatus, workflowSpool.subStatus) &&
        Objects.equals(this.execution, workflowSpool.execution) &&
        Objects.equals(this.id, workflowSpool.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, owner, updater, status, subStatus, execution, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowSpool {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subStatus: ").append(toIndentedString(subStatus)).append("\n");
    sb.append("    execution: ").append(toIndentedString(execution)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

