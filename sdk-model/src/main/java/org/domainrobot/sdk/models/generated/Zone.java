/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.MainIp;
import org.domainrobot.sdk.models.generated.NameServer;
import org.domainrobot.sdk.models.generated.NameserverActionConstants;
import org.domainrobot.sdk.models.generated.ResourceRecord;
import org.domainrobot.sdk.models.generated.Soa;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Zone
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class Zone {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("origin")
  private String origin = null;

  @JsonProperty("idn")
  private String idn = null;

  @JsonProperty("soa")
  private Soa soa = null;

  @JsonProperty("dnssec")
  private Boolean dnssec = null;

  @JsonProperty("nameServerGroup")
  private String nameServerGroup = null;

  @JsonProperty("allowTransfer")
  private Boolean allowTransfer = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("logId")
  private Long logId = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("domainsafe")
  private Boolean domainsafe = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("sourceVirtualHostname")
  private String sourceVirtualHostname = null;

  @JsonProperty("nameServers")
  private List<NameServer> nameServers = null;

  @JsonProperty("main")
  private MainIp main = null;

  @JsonProperty("wwwInclude")
  private Boolean wwwInclude = null;

  @JsonProperty("virtualNameServer")
  private String virtualNameServer = null;

  @JsonProperty("freeText")
  private List<String> freeText = null;

  @JsonProperty("action")
  private NameserverActionConstants action = null;

  @JsonProperty("grants")
  private List<String> grants = null;

  @JsonProperty("resourceRecords")
  private List<ResourceRecord> resourceRecords = null;

  @JsonProperty("roid")
  private Integer roid = null;

  public Zone created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Zone updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public Zone origin(String origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Zone name
   * @return origin
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "Zone name")
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }

  public Zone idn(String idn) {
    this.idn = idn;
    return this;
  }

   /**
   * The idn version of the origin.
   * @return idn
  **/
  @ApiModelProperty(value = "The idn version of the origin.")
  public String getIdn() {
    return idn;
  }

  public void setIdn(String idn) {
    this.idn = idn;
  }

  public Zone soa(Soa soa) {
    this.soa = soa;
    return this;
  }

   /**
   * Only for ns_action: \&quot;primary\&quot;  and \&quot;complete\&quot;
   * @return soa
  **/
  @Valid
  @ApiModelProperty(value = "Only for ns_action: \"primary\"  and \"complete\"")
  public Soa getSoa() {
    return soa;
  }

  public void setSoa(Soa soa) {
    this.soa = soa;
  }

  public Zone dnssec(Boolean dnssec) {
    this.dnssec = dnssec;
    return this;
  }

   /**
   * Enables dnssec
   * @return dnssec
  **/
  @ApiModelProperty(value = "Enables dnssec")
  public Boolean isDnssec() {
    return dnssec;
  }

  public void setDnssec(Boolean dnssec) {
    this.dnssec = dnssec;
  }

  public Zone nameServerGroup(String nameServerGroup) {
    this.nameServerGroup = nameServerGroup;
    return this;
  }

   /**
   * The name of the name server group, if the zone is managed by
   * @return nameServerGroup
  **/
  @ApiModelProperty(value = "The name of the name server group, if the zone is managed by")
  public String getNameServerGroup() {
    return nameServerGroup;
  }

  public void setNameServerGroup(String nameServerGroup) {
    this.nameServerGroup = nameServerGroup;
  }

  public Zone allowTransfer(Boolean allowTransfer) {
    this.allowTransfer = allowTransfer;
    return this;
  }

   /**
   * Allow AXFR
   * @return allowTransfer
  **/
  @ApiModelProperty(value = "Allow AXFR")
  public Boolean isAllowTransfer() {
    return allowTransfer;
  }

  public void setAllowTransfer(Boolean allowTransfer) {
    this.allowTransfer = allowTransfer;
  }

  public Zone owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public Zone updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updating user of the object
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updating user of the object")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public Zone logId(Long logId) {
    this.logId = logId;
    return this;
  }

   /**
   * The id of the related log-entry.
   * @return logId
  **/
  @ApiModelProperty(value = "The id of the related log-entry.")
  public Long getLogId() {
    return logId;
  }

  public void setLogId(Long logId) {
    this.logId = logId;
  }

  public Zone comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * A custom field. Can only be updated via PUT /zone/{name}/{nameserver}/_comment. Requires appropriate ACLs.
   * @return comment
  **/
  @ApiModelProperty(value = "A custom field. Can only be updated via PUT /zone/{name}/{nameserver}/_comment. Requires appropriate ACLs.")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Zone domainsafe(Boolean domainsafe) {
    this.domainsafe = domainsafe;
    return this;
  }

   /**
   * true if the domain is represented in the domain safe
   * @return domainsafe
  **/
  @ApiModelProperty(value = "true if the domain is represented in the domain safe")
  public Boolean isDomainsafe() {
    return domainsafe;
  }

  public void setDomainsafe(Boolean domainsafe) {
    this.domainsafe = domainsafe;
  }

  public Zone source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Nameserver, the zone is copied from via AXFR (for zone_import)
   * @return source
  **/
  @ApiModelProperty(value = "Nameserver, the zone is copied from via AXFR (for zone_import)")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public Zone sourceVirtualHostname(String sourceVirtualHostname) {
    this.sourceVirtualHostname = sourceVirtualHostname;
    return this;
  }

   /**
   * System name server to look up the zone to copy
   * @return sourceVirtualHostname
  **/
  @ApiModelProperty(value = "System name server to look up the zone to copy")
  public String getSourceVirtualHostname() {
    return sourceVirtualHostname;
  }

  public void setSourceVirtualHostname(String sourceVirtualHostname) {
    this.sourceVirtualHostname = sourceVirtualHostname;
  }

  public Zone nameServers(List<NameServer> nameServers) {
    this.nameServers = nameServers;
    return this;
  }

  public Zone addNameServersItem(NameServer nameServersItem) {
    if (this.nameServers == null) {
      this.nameServers = new ArrayList<NameServer>();
    }
    this.nameServers.add(nameServersItem);
    return this;
  }

   /**
   * List of name servers
   * @return nameServers
  **/
  @Valid
  @ApiModelProperty(value = "List of name servers")
  public List<NameServer> getNameServers() {
    return nameServers;
  }

  public void setNameServers(List<NameServer> nameServers) {
    this.nameServers = nameServers;
  }

  public Zone main(MainIp main) {
    this.main = main;
    return this;
  }

   /**
   * IP address of the zone (A record)
   * @return main
  **/
  @Valid
  @ApiModelProperty(value = "IP address of the zone (A record)")
  public MainIp getMain() {
    return main;
  }

  public void setMain(MainIp main) {
    this.main = main;
  }

  public Zone wwwInclude(Boolean wwwInclude) {
    this.wwwInclude = wwwInclude;
    return this;
  }

   /**
   * Automatic generation of resource records \&quot;www\&quot;
   * @return wwwInclude
  **/
  @ApiModelProperty(value = "Automatic generation of resource records \"www\"")
  public Boolean isWwwInclude() {
    return wwwInclude;
  }

  public void setWwwInclude(Boolean wwwInclude) {
    this.wwwInclude = wwwInclude;
  }

  public Zone virtualNameServer(String virtualNameServer) {
    this.virtualNameServer = virtualNameServer;
    return this;
  }

   /**
   * The first nameserver managed by the system
   * @return virtualNameServer
  **/
  @ApiModelProperty(value = "The first nameserver managed by the system")
  public String getVirtualNameServer() {
    return virtualNameServer;
  }

  public void setVirtualNameServer(String virtualNameServer) {
    this.virtualNameServer = virtualNameServer;
  }

  public Zone freeText(List<String> freeText) {
    this.freeText = freeText;
    return this;
  }

  public Zone addFreeTextItem(String freeTextItem) {
    if (this.freeText == null) {
      this.freeText = new ArrayList<String>();
    }
    this.freeText.add(freeTextItem);
    return this;
  }

   /**
   * The free text records.
   * @return freeText
  **/
  @ApiModelProperty(value = "The free text records.")
  public List<String> getFreeText() {
    return freeText;
  }

  public void setFreeText(List<String> freeText) {
    this.freeText = freeText;
  }

  public Zone action(NameserverActionConstants action) {
    this.action = action;
    return this;
  }

   /**
   * Additional nameserver check is proceeded
   * @return action
  **/
  @Valid
  @ApiModelProperty(value = "Additional nameserver check is proceeded")
  public NameserverActionConstants getAction() {
    return action;
  }

  public void setAction(NameserverActionConstants action) {
    this.action = action;
  }

  public Zone grants(List<String> grants) {
    this.grants = grants;
    return this;
  }

  public Zone addGrantsItem(String grantsItem) {
    if (this.grants == null) {
      this.grants = new ArrayList<String>();
    }
    this.grants.add(grantsItem);
    return this;
  }

   /**
   * The grants where transfer (axfr) can be done from.
   * @return grants
  **/
  @ApiModelProperty(value = "The grants where transfer (axfr) can be done from.")
  public List<String> getGrants() {
    return grants;
  }

  public void setGrants(List<String> grants) {
    this.grants = grants;
  }

  public Zone resourceRecords(List<ResourceRecord> resourceRecords) {
    this.resourceRecords = resourceRecords;
    return this;
  }

  public Zone addResourceRecordsItem(ResourceRecord resourceRecordsItem) {
    if (this.resourceRecords == null) {
      this.resourceRecords = new ArrayList<ResourceRecord>();
    }
    this.resourceRecords.add(resourceRecordsItem);
    return this;
  }

   /**
   * The resource records.
   * @return resourceRecords
  **/
  @Valid
 @Size(min=0,max=10000)  @ApiModelProperty(value = "The resource records.")
  public List<ResourceRecord> getResourceRecords() {
    return resourceRecords;
  }

  public void setResourceRecords(List<ResourceRecord> resourceRecords) {
    this.resourceRecords = resourceRecords;
  }

  public Zone roid(Integer roid) {
    this.roid = roid;
    return this;
  }

   /**
   * The resource object identifier of the zone
   * @return roid
  **/
  @ApiModelProperty(example = "1", value = "The resource object identifier of the zone")
  public Integer getRoid() {
    return roid;
  }

  public void setRoid(Integer roid) {
    this.roid = roid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Zone zone = (Zone) o;
    return Objects.equals(this.created, zone.created) &&
        Objects.equals(this.updated, zone.updated) &&
        Objects.equals(this.origin, zone.origin) &&
        Objects.equals(this.idn, zone.idn) &&
        Objects.equals(this.soa, zone.soa) &&
        Objects.equals(this.dnssec, zone.dnssec) &&
        Objects.equals(this.nameServerGroup, zone.nameServerGroup) &&
        Objects.equals(this.allowTransfer, zone.allowTransfer) &&
        Objects.equals(this.owner, zone.owner) &&
        Objects.equals(this.updater, zone.updater) &&
        Objects.equals(this.logId, zone.logId) &&
        Objects.equals(this.comment, zone.comment) &&
        Objects.equals(this.domainsafe, zone.domainsafe) &&
        Objects.equals(this.source, zone.source) &&
        Objects.equals(this.sourceVirtualHostname, zone.sourceVirtualHostname) &&
        Objects.equals(this.nameServers, zone.nameServers) &&
        Objects.equals(this.main, zone.main) &&
        Objects.equals(this.wwwInclude, zone.wwwInclude) &&
        Objects.equals(this.virtualNameServer, zone.virtualNameServer) &&
        Objects.equals(this.freeText, zone.freeText) &&
        Objects.equals(this.action, zone.action) &&
        Objects.equals(this.grants, zone.grants) &&
        Objects.equals(this.resourceRecords, zone.resourceRecords) &&
        Objects.equals(this.roid, zone.roid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, origin, idn, soa, dnssec, nameServerGroup, allowTransfer, owner, updater, logId, comment, domainsafe, source, sourceVirtualHostname, nameServers, main, wwwInclude, virtualNameServer, freeText, action, grants, resourceRecords, roid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Zone {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    idn: ").append(toIndentedString(idn)).append("\n");
    sb.append("    soa: ").append(toIndentedString(soa)).append("\n");
    sb.append("    dnssec: ").append(toIndentedString(dnssec)).append("\n");
    sb.append("    nameServerGroup: ").append(toIndentedString(nameServerGroup)).append("\n");
    sb.append("    allowTransfer: ").append(toIndentedString(allowTransfer)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    logId: ").append(toIndentedString(logId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    domainsafe: ").append(toIndentedString(domainsafe)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceVirtualHostname: ").append(toIndentedString(sourceVirtualHostname)).append("\n");
    sb.append("    nameServers: ").append(toIndentedString(nameServers)).append("\n");
    sb.append("    main: ").append(toIndentedString(main)).append("\n");
    sb.append("    wwwInclude: ").append(toIndentedString(wwwInclude)).append("\n");
    sb.append("    virtualNameServer: ").append(toIndentedString(virtualNameServer)).append("\n");
    sb.append("    freeText: ").append(toIndentedString(freeText)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    grants: ").append(toIndentedString(grants)).append("\n");
    sb.append("    resourceRecords: ").append(toIndentedString(resourceRecords)).append("\n");
    sb.append("    roid: ").append(toIndentedString(roid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

