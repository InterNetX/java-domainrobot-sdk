/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.BusinessCategory;

import javax.validation.Valid;

/**
 * ExtendedValidationExtension
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class ExtendedValidationExtension {
  @JsonProperty("joiCountryName")
  private String joiCountryName = null;

  @JsonProperty("companyNumber")
  private String companyNumber = null;

  @JsonProperty("businessCategory")
  private BusinessCategory businessCategory = null;

  public ExtendedValidationExtension joiCountryName(String joiCountryName) {
    this.joiCountryName = joiCountryName;
    return this;
  }

   /**
   * Country of judicial formation
   * @return joiCountryName
  **/
  @ApiModelProperty(value = "Country of judicial formation")
  public String getJoiCountryName() {
    return joiCountryName;
  }

  public void setJoiCountryName(String joiCountryName) {
    this.joiCountryName = joiCountryName;
  }

  public ExtendedValidationExtension companyNumber(String companyNumber) {
    this.companyNumber = companyNumber;
    return this;
  }

   /**
   * The company number
   * @return companyNumber
  **/
  @ApiModelProperty(value = "The company number")
  public String getCompanyNumber() {
    return companyNumber;
  }

  public void setCompanyNumber(String companyNumber) {
    this.companyNumber = companyNumber;
  }

  public ExtendedValidationExtension businessCategory(BusinessCategory businessCategory) {
    this.businessCategory = businessCategory;
    return this;
  }

   /**
   * Additional validation data required for certain Comodo products.
   * @return businessCategory
  **/
  @Valid
  @ApiModelProperty(value = "Additional validation data required for certain Comodo products.")
  public BusinessCategory getBusinessCategory() {
    return businessCategory;
  }

  public void setBusinessCategory(BusinessCategory businessCategory) {
    this.businessCategory = businessCategory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedValidationExtension extendedValidationExtension = (ExtendedValidationExtension) o;
    return Objects.equals(this.joiCountryName, extendedValidationExtension.joiCountryName) &&
        Objects.equals(this.companyNumber, extendedValidationExtension.companyNumber) &&
        Objects.equals(this.businessCategory, extendedValidationExtension.businessCategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(joiCountryName, companyNumber, businessCategory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedValidationExtension {\n");
    
    sb.append("    joiCountryName: ").append(toIndentedString(joiCountryName)).append("\n");
    sb.append("    companyNumber: ").append(toIndentedString(companyNumber)).append("\n");
    sb.append("    businessCategory: ").append(toIndentedString(businessCategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

