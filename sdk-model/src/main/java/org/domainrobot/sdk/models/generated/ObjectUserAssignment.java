/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.ObjectAssignmentMode;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ObjectUserAssignment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class ObjectUserAssignment {
  @JsonProperty("type")
  private String type = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("cancelation")
  private ObjectAssignmentMode cancelation = null;

  @JsonProperty("source")
  private BasicUser source = null;

  @JsonProperty("target")
  private BasicUser target = null;

  public ObjectUserAssignment type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the object.
   * @return type
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The type of the object.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ObjectUserAssignment owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public ObjectUserAssignment name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The object name.
   * @return name
  **/
  @NotNull
 @Size(min=1,max=2147483647)  @ApiModelProperty(required = true, value = "The object name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ObjectUserAssignment cancelation(ObjectAssignmentMode cancelation) {
    this.cancelation = cancelation;
    return this;
  }

   /**
   * The cancelation mode.
   * @return cancelation
  **/
  @Valid
  @ApiModelProperty(value = "The cancelation mode.")
  public ObjectAssignmentMode getCancelation() {
    return cancelation;
  }

  public void setCancelation(ObjectAssignmentMode cancelation) {
    this.cancelation = cancelation;
  }

  public ObjectUserAssignment source(BasicUser source) {
    this.source = source;
    return this;
  }

   /**
   * The source owner.
   * @return source
  **/
  @Valid
  @ApiModelProperty(value = "The source owner.")
  public BasicUser getSource() {
    return source;
  }

  public void setSource(BasicUser source) {
    this.source = source;
  }

  public ObjectUserAssignment target(BasicUser target) {
    this.target = target;
    return this;
  }

   /**
   * The target owner.
   * @return target
  **/
  @Valid
  @ApiModelProperty(value = "The target owner.")
  public BasicUser getTarget() {
    return target;
  }

  public void setTarget(BasicUser target) {
    this.target = target;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectUserAssignment objectUserAssignment = (ObjectUserAssignment) o;
    return Objects.equals(this.type, objectUserAssignment.type) &&
        Objects.equals(this.owner, objectUserAssignment.owner) &&
        Objects.equals(this.name, objectUserAssignment.name) &&
        Objects.equals(this.cancelation, objectUserAssignment.cancelation) &&
        Objects.equals(this.source, objectUserAssignment.source) &&
        Objects.equals(this.target, objectUserAssignment.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, owner, name, cancelation, source, target);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectUserAssignment {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cancelation: ").append(toIndentedString(cancelation)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

