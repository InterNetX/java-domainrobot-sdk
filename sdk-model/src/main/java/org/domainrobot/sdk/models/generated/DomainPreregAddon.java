/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * DomainPreregAddon
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class DomainPreregAddon {
  @JsonProperty("irpAppCapacit")
  private String irpAppCapacit = null;

  @JsonProperty("irpAppDate")
  private Date irpAppDate = null;

  @JsonProperty("irpCcLocality")
  private String irpCcLocality = null;

  @JsonProperty("irpName")
  private String irpName = null;

  @JsonProperty("irpNumber")
  private String irpNumber = null;

  @JsonProperty("irpPvrc")
  private String irpPvrc = null;

  @JsonProperty("irpRegDate")
  private Date irpRegDate = null;

  @JsonProperty("mode")
  private String mode = null;

  @JsonProperty("confirmOrder")
  private Boolean confirmOrder = null;

  @JsonProperty("externalReference")
  private String externalReference = null;

  @JsonProperty("notAfter")
  private Date notAfter = null;

  @JsonProperty("confirmed")
  private Date confirmed = null;

  @JsonProperty("confirmIp")
  private String confirmIp = null;

  @JsonProperty("priceClass")
  private String priceClass = null;

  public DomainPreregAddon irpAppCapacit(String irpAppCapacit) {
    this.irpAppCapacit = irpAppCapacit;
    return this;
  }

   /**
   * The Irp App Capacity.
   * @return irpAppCapacit
  **/
  @ApiModelProperty(value = "The Irp App Capacity.")
  public String getIrpAppCapacit() {
    return irpAppCapacit;
  }

  public void setIrpAppCapacit(String irpAppCapacit) {
    this.irpAppCapacit = irpAppCapacit;
  }

  public DomainPreregAddon irpAppDate(Date irpAppDate) {
    this.irpAppDate = irpAppDate;
    return this;
  }

   /**
   * The Irp App Date.
   * @return irpAppDate
  **/
  @Valid
  @ApiModelProperty(value = "The Irp App Date.")
  public Date getIrpAppDate() {
    return irpAppDate;
  }

  public void setIrpAppDate(Date irpAppDate) {
    this.irpAppDate = irpAppDate;
  }

  public DomainPreregAddon irpCcLocality(String irpCcLocality) {
    this.irpCcLocality = irpCcLocality;
    return this;
  }

   /**
   * The Irp Cc Locality.
   * @return irpCcLocality
  **/
  @ApiModelProperty(value = "The Irp Cc Locality.")
  public String getIrpCcLocality() {
    return irpCcLocality;
  }

  public void setIrpCcLocality(String irpCcLocality) {
    this.irpCcLocality = irpCcLocality;
  }

  public DomainPreregAddon irpName(String irpName) {
    this.irpName = irpName;
    return this;
  }

   /**
   * The Irp Name.
   * @return irpName
  **/
  @ApiModelProperty(value = "The Irp Name.")
  public String getIrpName() {
    return irpName;
  }

  public void setIrpName(String irpName) {
    this.irpName = irpName;
  }

  public DomainPreregAddon irpNumber(String irpNumber) {
    this.irpNumber = irpNumber;
    return this;
  }

   /**
   * The Irp Number.
   * @return irpNumber
  **/
  @ApiModelProperty(value = "The Irp Number.")
  public String getIrpNumber() {
    return irpNumber;
  }

  public void setIrpNumber(String irpNumber) {
    this.irpNumber = irpNumber;
  }

  public DomainPreregAddon irpPvrc(String irpPvrc) {
    this.irpPvrc = irpPvrc;
    return this;
  }

   /**
   * The Irp Pvrc.
   * @return irpPvrc
  **/
  @ApiModelProperty(value = "The Irp Pvrc.")
  public String getIrpPvrc() {
    return irpPvrc;
  }

  public void setIrpPvrc(String irpPvrc) {
    this.irpPvrc = irpPvrc;
  }

  public DomainPreregAddon irpRegDate(Date irpRegDate) {
    this.irpRegDate = irpRegDate;
    return this;
  }

   /**
   * The Irp Reg Date.
   * @return irpRegDate
  **/
  @Valid
  @ApiModelProperty(value = "The Irp Reg Date.")
  public Date getIrpRegDate() {
    return irpRegDate;
  }

  public void setIrpRegDate(Date irpRegDate) {
    this.irpRegDate = irpRegDate;
  }

  public DomainPreregAddon mode(String mode) {
    this.mode = mode;
    return this;
  }

   /**
   * The addon update mode.
   * @return mode
  **/
  @ApiModelProperty(value = "The addon update mode.")
  public String getMode() {
    return mode;
  }

  public void setMode(String mode) {
    this.mode = mode;
  }

  public DomainPreregAddon confirmOrder(Boolean confirmOrder) {
    this.confirmOrder = confirmOrder;
    return this;
  }

   /**
   * Confirm order.
   * @return confirmOrder
  **/
  @ApiModelProperty(value = "Confirm order.")
  public Boolean isConfirmOrder() {
    return confirmOrder;
  }

  public void setConfirmOrder(Boolean confirmOrder) {
    this.confirmOrder = confirmOrder;
  }

  public DomainPreregAddon externalReference(String externalReference) {
    this.externalReference = externalReference;
    return this;
  }

   /**
   * The external reference.
   * @return externalReference
  **/
  @ApiModelProperty(value = "The external reference.")
  public String getExternalReference() {
    return externalReference;
  }

  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }

  public DomainPreregAddon notAfter(Date notAfter) {
    this.notAfter = notAfter;
    return this;
  }

   /**
   * The not after date.
   * @return notAfter
  **/
  @Valid
  @ApiModelProperty(value = "The not after date.")
  public Date getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(Date notAfter) {
    this.notAfter = notAfter;
  }

  public DomainPreregAddon confirmed(Date confirmed) {
    this.confirmed = confirmed;
    return this;
  }

   /**
   * The confirmed date.
   * @return confirmed
  **/
  @Valid
  @ApiModelProperty(value = "The confirmed date.")
  public Date getConfirmed() {
    return confirmed;
  }

  public void setConfirmed(Date confirmed) {
    this.confirmed = confirmed;
  }

  public DomainPreregAddon confirmIp(String confirmIp) {
    this.confirmIp = confirmIp;
    return this;
  }

   /**
   * The confirm ip.
   * @return confirmIp
  **/
  @ApiModelProperty(value = "The confirm ip.")
  public String getConfirmIp() {
    return confirmIp;
  }

  public void setConfirmIp(String confirmIp) {
    this.confirmIp = confirmIp;
  }

  public DomainPreregAddon priceClass(String priceClass) {
    this.priceClass = priceClass;
    return this;
  }

   /**
   * The price class.
   * @return priceClass
  **/
  @ApiModelProperty(value = "The price class.")
  public String getPriceClass() {
    return priceClass;
  }

  public void setPriceClass(String priceClass) {
    this.priceClass = priceClass;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomainPreregAddon domainPreregAddon = (DomainPreregAddon) o;
    return Objects.equals(this.irpAppCapacit, domainPreregAddon.irpAppCapacit) &&
        Objects.equals(this.irpAppDate, domainPreregAddon.irpAppDate) &&
        Objects.equals(this.irpCcLocality, domainPreregAddon.irpCcLocality) &&
        Objects.equals(this.irpName, domainPreregAddon.irpName) &&
        Objects.equals(this.irpNumber, domainPreregAddon.irpNumber) &&
        Objects.equals(this.irpPvrc, domainPreregAddon.irpPvrc) &&
        Objects.equals(this.irpRegDate, domainPreregAddon.irpRegDate) &&
        Objects.equals(this.mode, domainPreregAddon.mode) &&
        Objects.equals(this.confirmOrder, domainPreregAddon.confirmOrder) &&
        Objects.equals(this.externalReference, domainPreregAddon.externalReference) &&
        Objects.equals(this.notAfter, domainPreregAddon.notAfter) &&
        Objects.equals(this.confirmed, domainPreregAddon.confirmed) &&
        Objects.equals(this.confirmIp, domainPreregAddon.confirmIp) &&
        Objects.equals(this.priceClass, domainPreregAddon.priceClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(irpAppCapacit, irpAppDate, irpCcLocality, irpName, irpNumber, irpPvrc, irpRegDate, mode, confirmOrder, externalReference, notAfter, confirmed, confirmIp, priceClass);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomainPreregAddon {\n");
    
    sb.append("    irpAppCapacit: ").append(toIndentedString(irpAppCapacit)).append("\n");
    sb.append("    irpAppDate: ").append(toIndentedString(irpAppDate)).append("\n");
    sb.append("    irpCcLocality: ").append(toIndentedString(irpCcLocality)).append("\n");
    sb.append("    irpName: ").append(toIndentedString(irpName)).append("\n");
    sb.append("    irpNumber: ").append(toIndentedString(irpNumber)).append("\n");
    sb.append("    irpPvrc: ").append(toIndentedString(irpPvrc)).append("\n");
    sb.append("    irpRegDate: ").append(toIndentedString(irpRegDate)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    confirmOrder: ").append(toIndentedString(confirmOrder)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    confirmed: ").append(toIndentedString(confirmed)).append("\n");
    sb.append("    confirmIp: ").append(toIndentedString(confirmIp)).append("\n");
    sb.append("    priceClass: ").append(toIndentedString(priceClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

