/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ResourceRecord
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class ResourceRecord {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("ttl")
  private Long ttl = null;

  @JsonProperty("type")
  private String type = null;

  @JsonProperty("value")
  private String value = null;

  @JsonProperty("pref")
  private Integer pref = null;

  @JsonProperty("raw")
  private String raw = null;

  public ResourceRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the record.
   * @return name
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The name of the record.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ResourceRecord ttl(Long ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * TTL of the record (Optionally if not set then Default SOA TTL is used)
   * @return ttl
  **/
  @ApiModelProperty(value = "TTL of the record (Optionally if not set then Default SOA TTL is used)")
  public Long getTtl() {
    return ttl;
  }

  public void setTtl(Long ttl) {
    this.ttl = ttl;
  }

  public ResourceRecord type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the record, e.g. A
   * @return type
  **/
  @ApiModelProperty(example = "A, MX, CNAME, TXT, SRV, PTR, AAAA, NS, CAA, PROCEED_MUC, TLSA, NAPTR, SSHFP, LOC, RP, HINFO, PROCEED, ALIAS, DNSKEY, NSEC, DS", value = "The type of the record, e.g. A")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ResourceRecord value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the record.
   * @return value
  **/
  @ApiModelProperty(value = "The value of the record.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ResourceRecord pref(Integer pref) {
    this.pref = pref;
    return this;
  }

   /**
   * Preference of the record, need for some record types e.g. MX
   * maximum: 65535
   * @return pref
  **/
 @Max(65535)  @ApiModelProperty(value = "Preference of the record, need for some record types e.g. MX")
  public Integer getPref() {
    return pref;
  }

  public void setPref(Integer pref) {
    this.pref = pref;
  }

  public ResourceRecord raw(String raw) {
    this.raw = raw;
    return this;
  }

   /**
   * The bind notation of the record. Only used by the zone stream task!
   * @return raw
  **/
  @ApiModelProperty(value = "The bind notation of the record. Only used by the zone stream task!")
  public String getRaw() {
    return raw;
  }

  public void setRaw(String raw) {
    this.raw = raw;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceRecord resourceRecord = (ResourceRecord) o;
    return Objects.equals(this.name, resourceRecord.name) &&
        Objects.equals(this.ttl, resourceRecord.ttl) &&
        Objects.equals(this.type, resourceRecord.type) &&
        Objects.equals(this.value, resourceRecord.value) &&
        Objects.equals(this.pref, resourceRecord.pref) &&
        Objects.equals(this.raw, resourceRecord.raw);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ttl, type, value, pref, raw);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceRecord {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    pref: ").append(toIndentedString(pref)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

