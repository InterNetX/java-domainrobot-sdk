/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.InetAddress;
import org.domainrobot.sdk.models.generated.Name;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * VirtualNameServer
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class VirtualNameServer {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("name")
  private Name name = null;

  @JsonProperty("mainAddress")
  private InetAddress mainAddress = null;

  @JsonProperty("ipAddresses")
  private List<String> ipAddresses = null;

  public VirtualNameServer created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public VirtualNameServer updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public VirtualNameServer owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public VirtualNameServer updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updater of the object.
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updater of the object.")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public VirtualNameServer active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Flag to show if the nameserver is active
   * @return active
  **/
  @ApiModelProperty(value = "Flag to show if the nameserver is active")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public VirtualNameServer name(Name name) {
    this.name = name;
    return this;
  }

   /**
   * Host name of the nameserver.
   * @return name
  **/
  @Valid
  @ApiModelProperty(value = "Host name of the nameserver.")
  public Name getName() {
    return name;
  }

  public void setName(Name name) {
    this.name = name;
  }

  public VirtualNameServer mainAddress(InetAddress mainAddress) {
    this.mainAddress = mainAddress;
    return this;
  }

   /**
   * The mainAddress
   * @return mainAddress
  **/
  @Valid
  @ApiModelProperty(value = "The mainAddress")
  public InetAddress getMainAddress() {
    return mainAddress;
  }

  public void setMainAddress(InetAddress mainAddress) {
    this.mainAddress = mainAddress;
  }

  public VirtualNameServer ipAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
    return this;
  }

  public VirtualNameServer addIpAddressesItem(String ipAddressesItem) {
    if (this.ipAddresses == null) {
      this.ipAddresses = new ArrayList<String>();
    }
    this.ipAddresses.add(ipAddressesItem);
    return this;
  }

   /**
   * The ip addresses.
   * @return ipAddresses
  **/
  @ApiModelProperty(value = "The ip addresses.")
  public List<String> getIpAddresses() {
    return ipAddresses;
  }

  public void setIpAddresses(List<String> ipAddresses) {
    this.ipAddresses = ipAddresses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualNameServer virtualNameServer = (VirtualNameServer) o;
    return Objects.equals(this.created, virtualNameServer.created) &&
        Objects.equals(this.updated, virtualNameServer.updated) &&
        Objects.equals(this.owner, virtualNameServer.owner) &&
        Objects.equals(this.updater, virtualNameServer.updater) &&
        Objects.equals(this.active, virtualNameServer.active) &&
        Objects.equals(this.name, virtualNameServer.name) &&
        Objects.equals(this.mainAddress, virtualNameServer.mainAddress) &&
        Objects.equals(this.ipAddresses, virtualNameServer.ipAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, owner, updater, active, name, mainAddress, ipAddresses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualNameServer {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mainAddress: ").append(toIndentedString(mainAddress)).append("\n");
    sb.append("    ipAddresses: ").append(toIndentedString(ipAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

