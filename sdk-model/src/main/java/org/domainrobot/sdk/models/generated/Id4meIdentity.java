/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.Claims;
import org.domainrobot.sdk.models.generated.Id4MeAgent;
import org.domainrobot.sdk.models.generated.IdentityStatus;
import org.domainrobot.sdk.models.generated.ModelConfiguration;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Id4meIdentity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class Id4meIdentity {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("agent")
  private Id4MeAgent agent = null;

  @JsonProperty("verifyExpire")
  private Date verifyExpire = null;

  @JsonProperty("addons")
  private ModelConfiguration addons = null;

  @JsonProperty("magicLink")
  private String magicLink = null;

  @JsonProperty("claims")
  private Claims claims = null;

  @JsonProperty("showClaims")
  private Boolean showClaims = null;

  @JsonProperty("resetUrl")
  private String resetUrl = null;

  @JsonProperty("resetUrlExpire")
  private Date resetUrlExpire = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("status")
  private IdentityStatus status = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("record")
  private List<String> record = null;

  public Id4meIdentity created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Id4meIdentity updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public Id4meIdentity owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public Id4meIdentity updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updater of the object.
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updater of the object.")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public Id4meIdentity agent(Id4MeAgent agent) {
    this.agent = agent;
    return this;
  }

   /**
   * The ID4ME agent
   * @return agent
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The ID4ME agent")
  public Id4MeAgent getAgent() {
    return agent;
  }

  public void setAgent(Id4MeAgent agent) {
    this.agent = agent;
  }

  public Id4meIdentity verifyExpire(Date verifyExpire) {
    this.verifyExpire = verifyExpire;
    return this;
  }

   /**
   * Expiration of verification
   * @return verifyExpire
  **/
  @Valid
  @ApiModelProperty(value = "Expiration of verification")
  public Date getVerifyExpire() {
    return verifyExpire;
  }

  public void setVerifyExpire(Date verifyExpire) {
    this.verifyExpire = verifyExpire;
  }

  public Id4meIdentity addons(ModelConfiguration addons) {
    this.addons = addons;
    return this;
  }

   /**
   * Additional information
   * @return addons
  **/
  @Valid
  @ApiModelProperty(value = "Additional information")
  public ModelConfiguration getAddons() {
    return addons;
  }

  public void setAddons(ModelConfiguration addons) {
    this.addons = addons;
  }

  public Id4meIdentity magicLink(String magicLink) {
    this.magicLink = magicLink;
    return this;
  }

   /**
   * The generated magic link
   * @return magicLink
  **/
  @ApiModelProperty(value = "The generated magic link")
  public String getMagicLink() {
    return magicLink;
  }

  public void setMagicLink(String magicLink) {
    this.magicLink = magicLink;
  }

  public Id4meIdentity claims(Claims claims) {
    this.claims = claims;
    return this;
  }

   /**
   * The initial claims
   * @return claims
  **/
  @Valid
  @ApiModelProperty(value = "The initial claims")
  public Claims getClaims() {
    return claims;
  }

  public void setClaims(Claims claims) {
    this.claims = claims;
  }

  public Id4meIdentity showClaims(Boolean showClaims) {
    this.showClaims = showClaims;
    return this;
  }

   /**
   * Enables showing claims.
   * @return showClaims
  **/
  @ApiModelProperty(value = "Enables showing claims.")
  public Boolean isShowClaims() {
    return showClaims;
  }

  public void setShowClaims(Boolean showClaims) {
    this.showClaims = showClaims;
  }

  public Id4meIdentity resetUrl(String resetUrl) {
    this.resetUrl = resetUrl;
    return this;
  }

   /**
   * Url to redirect to passwort reset
   * @return resetUrl
  **/
  @ApiModelProperty(value = "Url to redirect to passwort reset")
  public String getResetUrl() {
    return resetUrl;
  }

  public void setResetUrl(String resetUrl) {
    this.resetUrl = resetUrl;
  }

  public Id4meIdentity resetUrlExpire(Date resetUrlExpire) {
    this.resetUrlExpire = resetUrlExpire;
    return this;
  }

   /**
   * time when reset url expire
   * @return resetUrlExpire
  **/
  @Valid
  @ApiModelProperty(value = "time when reset url expire")
  public Date getResetUrlExpire() {
    return resetUrlExpire;
  }

  public void setResetUrlExpire(Date resetUrlExpire) {
    this.resetUrlExpire = resetUrlExpire;
  }

  public Id4meIdentity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Fully qualified domain name
   * @return name
  **/
  @ApiModelProperty(value = "Fully qualified domain name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Id4meIdentity status(IdentityStatus status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "status")
  public IdentityStatus getStatus() {
    return status;
  }

  public void setStatus(IdentityStatus status) {
    this.status = status;
  }

  public Id4meIdentity language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language.
   * @return language
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The language.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public Id4meIdentity record(List<String> record) {
    this.record = record;
    return this;
  }

  public Id4meIdentity addRecordItem(String recordItem) {
    if (this.record == null) {
      this.record = new ArrayList<String>();
    }
    this.record.add(recordItem);
    return this;
  }

   /**
   * DNS text records
   * @return record
  **/
  @ApiModelProperty(value = "DNS text records")
  public List<String> getRecord() {
    return record;
  }

  public void setRecord(List<String> record) {
    this.record = record;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Id4meIdentity id4meIdentity = (Id4meIdentity) o;
    return Objects.equals(this.created, id4meIdentity.created) &&
        Objects.equals(this.updated, id4meIdentity.updated) &&
        Objects.equals(this.owner, id4meIdentity.owner) &&
        Objects.equals(this.updater, id4meIdentity.updater) &&
        Objects.equals(this.agent, id4meIdentity.agent) &&
        Objects.equals(this.verifyExpire, id4meIdentity.verifyExpire) &&
        Objects.equals(this.addons, id4meIdentity.addons) &&
        Objects.equals(this.magicLink, id4meIdentity.magicLink) &&
        Objects.equals(this.claims, id4meIdentity.claims) &&
        Objects.equals(this.showClaims, id4meIdentity.showClaims) &&
        Objects.equals(this.resetUrl, id4meIdentity.resetUrl) &&
        Objects.equals(this.resetUrlExpire, id4meIdentity.resetUrlExpire) &&
        Objects.equals(this.name, id4meIdentity.name) &&
        Objects.equals(this.status, id4meIdentity.status) &&
        Objects.equals(this.language, id4meIdentity.language) &&
        Objects.equals(this.record, id4meIdentity.record);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, owner, updater, agent, verifyExpire, addons, magicLink, claims, showClaims, resetUrl, resetUrlExpire, name, status, language, record);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Id4meIdentity {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    verifyExpire: ").append(toIndentedString(verifyExpire)).append("\n");
    sb.append("    addons: ").append(toIndentedString(addons)).append("\n");
    sb.append("    magicLink: ").append(toIndentedString(magicLink)).append("\n");
    sb.append("    claims: ").append(toIndentedString(claims)).append("\n");
    sb.append("    showClaims: ").append(toIndentedString(showClaims)).append("\n");
    sb.append("    resetUrl: ").append(toIndentedString(resetUrl)).append("\n");
    sb.append("    resetUrlExpire: ").append(toIndentedString(resetUrlExpire)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    record: ").append(toIndentedString(record)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

