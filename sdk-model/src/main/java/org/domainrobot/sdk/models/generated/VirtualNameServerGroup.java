/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.PhysicalNameServerGroup;
import org.domainrobot.sdk.models.generated.VirtualNameServer;

import javax.validation.Valid;

/**
 * VirtualNameServerGroup
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class VirtualNameServerGroup {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("useDefaultIps")
  private Boolean useDefaultIps = null;

  @JsonProperty("nameServers")
  private List<VirtualNameServer> nameServers = null;

  @JsonProperty("systemNameServerGroup")
  private PhysicalNameServerGroup systemNameServerGroup = null;

  public VirtualNameServerGroup created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public VirtualNameServerGroup updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public VirtualNameServerGroup owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public VirtualNameServerGroup updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updating user of the object.
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updating user of the object.")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public VirtualNameServerGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The custom label for the group
   * @return name
  **/
  @ApiModelProperty(value = "The custom label for the group")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VirtualNameServerGroup useDefaultIps(Boolean useDefaultIps) {
    this.useDefaultIps = useDefaultIps;
    return this;
  }

   /**
   * The useDefaultIps
   * @return useDefaultIps
  **/
  @ApiModelProperty(value = "The useDefaultIps")
  public Boolean isUseDefaultIps() {
    return useDefaultIps;
  }

  public void setUseDefaultIps(Boolean useDefaultIps) {
    this.useDefaultIps = useDefaultIps;
  }

  public VirtualNameServerGroup nameServers(List<VirtualNameServer> nameServers) {
    this.nameServers = nameServers;
    return this;
  }

  public VirtualNameServerGroup addNameServersItem(VirtualNameServer nameServersItem) {
    if (this.nameServers == null) {
      this.nameServers = new ArrayList<VirtualNameServer>();
    }
    this.nameServers.add(nameServersItem);
    return this;
  }

   /**
   * The name servers of the group.
   * @return nameServers
  **/
  @Valid
  @ApiModelProperty(value = "The name servers of the group.")
  public List<VirtualNameServer> getNameServers() {
    return nameServers;
  }

  public void setNameServers(List<VirtualNameServer> nameServers) {
    this.nameServers = nameServers;
  }

  public VirtualNameServerGroup systemNameServerGroup(PhysicalNameServerGroup systemNameServerGroup) {
    this.systemNameServerGroup = systemNameServerGroup;
    return this;
  }

   /**
   * The custom label for the group
   * @return systemNameServerGroup
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The custom label for the group")
  public PhysicalNameServerGroup getSystemNameServerGroup() {
    return systemNameServerGroup;
  }

  public void setSystemNameServerGroup(PhysicalNameServerGroup systemNameServerGroup) {
    this.systemNameServerGroup = systemNameServerGroup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualNameServerGroup virtualNameServerGroup = (VirtualNameServerGroup) o;
    return Objects.equals(this.created, virtualNameServerGroup.created) &&
        Objects.equals(this.updated, virtualNameServerGroup.updated) &&
        Objects.equals(this.owner, virtualNameServerGroup.owner) &&
        Objects.equals(this.updater, virtualNameServerGroup.updater) &&
        Objects.equals(this.name, virtualNameServerGroup.name) &&
        Objects.equals(this.useDefaultIps, virtualNameServerGroup.useDefaultIps) &&
        Objects.equals(this.nameServers, virtualNameServerGroup.nameServers) &&
        Objects.equals(this.systemNameServerGroup, virtualNameServerGroup.systemNameServerGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, owner, updater, name, useDefaultIps, nameServers, systemNameServerGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualNameServerGroup {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    useDefaultIps: ").append(toIndentedString(useDefaultIps)).append("\n");
    sb.append("    nameServers: ").append(toIndentedString(nameServers)).append("\n");
    sb.append("    systemNameServerGroup: ").append(toIndentedString(systemNameServerGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

