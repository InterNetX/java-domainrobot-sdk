/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.CiraCprConstants;

import javax.validation.Valid;

/**
 * ContactCaExtensions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class ContactCaExtensions {
  @JsonProperty("cpr")
  private CiraCprConstants cpr = null;

  @JsonProperty("agreementVersion")
  private Double agreementVersion = null;

  @JsonProperty("originatingIp")
  private String originatingIp = null;

  @JsonProperty("officialRepresentative")
  private String officialRepresentative = null;

  @JsonProperty("trusteePercentage")
  private Double trusteePercentage = null;

  public ContactCaExtensions cpr(CiraCprConstants cpr) {
    this.cpr = cpr;
    return this;
  }

   /**
   * The cira cpr.
   * @return cpr
  **/
  @Valid
  @ApiModelProperty(value = "The cira cpr.")
  public CiraCprConstants getCpr() {
    return cpr;
  }

  public void setCpr(CiraCprConstants cpr) {
    this.cpr = cpr;
  }

  public ContactCaExtensions agreementVersion(Double agreementVersion) {
    this.agreementVersion = agreementVersion;
    return this;
  }

   /**
   * The agreement version.
   * @return agreementVersion
  **/
  @ApiModelProperty(value = "The agreement version.")
  public Double getAgreementVersion() {
    return agreementVersion;
  }

  public void setAgreementVersion(Double agreementVersion) {
    this.agreementVersion = agreementVersion;
  }

  public ContactCaExtensions originatingIp(String originatingIp) {
    this.originatingIp = originatingIp;
    return this;
  }

   /**
   * The originating ip.
   * @return originatingIp
  **/
  @ApiModelProperty(value = "The originating ip.")
  public String getOriginatingIp() {
    return originatingIp;
  }

  public void setOriginatingIp(String originatingIp) {
    this.originatingIp = originatingIp;
  }

  public ContactCaExtensions officialRepresentative(String officialRepresentative) {
    this.officialRepresentative = officialRepresentative;
    return this;
  }

   /**
   * The official representative.
   * @return officialRepresentative
  **/
  @ApiModelProperty(value = "The official representative.")
  public String getOfficialRepresentative() {
    return officialRepresentative;
  }

  public void setOfficialRepresentative(String officialRepresentative) {
    this.officialRepresentative = officialRepresentative;
  }

  public ContactCaExtensions trusteePercentage(Double trusteePercentage) {
    this.trusteePercentage = trusteePercentage;
    return this;
  }

   /**
   * The trustee percentage.
   * @return trusteePercentage
  **/
  @ApiModelProperty(value = "The trustee percentage.")
  public Double getTrusteePercentage() {
    return trusteePercentage;
  }

  public void setTrusteePercentage(Double trusteePercentage) {
    this.trusteePercentage = trusteePercentage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactCaExtensions contactCaExtensions = (ContactCaExtensions) o;
    return Objects.equals(this.cpr, contactCaExtensions.cpr) &&
        Objects.equals(this.agreementVersion, contactCaExtensions.agreementVersion) &&
        Objects.equals(this.originatingIp, contactCaExtensions.originatingIp) &&
        Objects.equals(this.officialRepresentative, contactCaExtensions.officialRepresentative) &&
        Objects.equals(this.trusteePercentage, contactCaExtensions.trusteePercentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpr, agreementVersion, originatingIp, officialRepresentative, trusteePercentage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactCaExtensions {\n");
    
    sb.append("    cpr: ").append(toIndentedString(cpr)).append("\n");
    sb.append("    agreementVersion: ").append(toIndentedString(agreementVersion)).append("\n");
    sb.append("    originatingIp: ").append(toIndentedString(originatingIp)).append("\n");
    sb.append("    officialRepresentative: ").append(toIndentedString(officialRepresentative)).append("\n");
    sb.append("    trusteePercentage: ").append(toIndentedString(trusteePercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

