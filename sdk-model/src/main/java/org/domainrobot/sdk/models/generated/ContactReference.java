/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.ContactReferenceType;
import org.domainrobot.sdk.models.generated.NicMember;
import org.domainrobot.sdk.models.generated.ObjectStatus;

import javax.validation.Valid;

/**
 * ContactReference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class ContactReference {
  @JsonProperty("nic")
  private NicMember nic = null;

  @JsonProperty("status")
  private ObjectStatus status = null;

  @JsonProperty("type")
  private ContactReferenceType type = null;

  @JsonProperty("role")
  private ContactReferenceType role = null;

  @JsonProperty("name")
  private String name = null;

  public ContactReference nic(NicMember nic) {
    this.nic = nic;
    return this;
  }

   /**
   * The nic
   * @return nic
  **/
  @Valid
  @ApiModelProperty(value = "The nic")
  public NicMember getNic() {
    return nic;
  }

  public void setNic(NicMember nic) {
    this.nic = nic;
  }

  public ContactReference status(ObjectStatus status) {
    this.status = status;
    return this;
  }

   /**
   * The status
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "The status")
  public ObjectStatus getStatus() {
    return status;
  }

  public void setStatus(ObjectStatus status) {
    this.status = status;
  }

  public ContactReference type(ContactReferenceType type) {
    this.type = type;
    return this;
  }

   /**
   * The contact reference type
   * @return type
  **/
  @Valid
  @ApiModelProperty(value = "The contact reference type")
  public ContactReferenceType getType() {
    return type;
  }

  public void setType(ContactReferenceType type) {
    this.type = type;
  }

  public ContactReference role(ContactReferenceType role) {
    this.role = role;
    return this;
  }

   /**
   * The role as contact reference type
   * @return role
  **/
  @Valid
  @ApiModelProperty(value = "The role as contact reference type")
  public ContactReferenceType getRole() {
    return role;
  }

  public void setRole(ContactReferenceType role) {
    this.role = role;
  }

  public ContactReference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The nic reference
   * @return name
  **/
  @ApiModelProperty(value = "The nic reference")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactReference contactReference = (ContactReference) o;
    return Objects.equals(this.nic, contactReference.nic) &&
        Objects.equals(this.status, contactReference.status) &&
        Objects.equals(this.type, contactReference.type) &&
        Objects.equals(this.role, contactReference.role) &&
        Objects.equals(this.name, contactReference.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nic, status, type, role, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactReference {\n");
    
    sb.append("    nic: ").append(toIndentedString(nic)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

