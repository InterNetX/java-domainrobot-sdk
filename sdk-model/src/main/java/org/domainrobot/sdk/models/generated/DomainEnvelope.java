/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.domainrobot.sdk.models.generated.DomainStudioDomainSource;
import org.domainrobot.sdk.models.generated.DomainStudioService;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * DomainEnvelope
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class DomainEnvelope {
  @JsonProperty("domain")
  private String domain = null;

  @JsonProperty("idn")
  private String idn = null;

  @JsonProperty("source")
  private DomainStudioDomainSource source = null;

  @JsonProperty("services")
  private DomainStudioService services = null;

  @JsonProperty("debugTime")
  private Boolean debugTime = null;

  public DomainEnvelope domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * The domain
   * @return domain
  **/
  @ApiModelProperty(example = "domain.de", value = "The domain")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public DomainEnvelope idn(String idn) {
    this.idn = idn;
    return this;
  }

   /**
   * The unicode domain name
   * @return idn
  **/
  @ApiModelProperty(example = "m√ºller.org", value = "The unicode domain name")
  public String getIdn() {
    return idn;
  }

  public void setIdn(String idn) {
    this.idn = idn;
  }

  public DomainEnvelope source(DomainStudioDomainSource source) {
    this.source = source;
    return this;
  }

   /**
   * Source
   * @return source
  **/
  @Valid
  @ApiModelProperty(value = "Source")
  public DomainStudioDomainSource getSource() {
    return source;
  }

  public void setSource(DomainStudioDomainSource source) {
    this.source = source;
  }

  public DomainEnvelope services(DomainStudioService services) {
    this.services = services;
    return this;
  }

   /**
   * Source
   * @return services
  **/
  @Valid
  @ApiModelProperty(value = "Source")
  public DomainStudioService getServices() {
    return services;
  }

  public void setServices(DomainStudioService services) {
    this.services = services;
  }

  public DomainEnvelope debugTime(Boolean debugTime) {
    this.debugTime = debugTime;
    return this;
  }

   /**
   * Defines if the user already owns this domain.
   * @return debugTime
  **/
  @ApiModelProperty(value = "Defines if the user already owns this domain.")
  public Boolean isDebugTime() {
    return debugTime;
  }

  public void setDebugTime(Boolean debugTime) {
    this.debugTime = debugTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DomainEnvelope domainEnvelope = (DomainEnvelope) o;
    return Objects.equals(this.domain, domainEnvelope.domain) &&
        Objects.equals(this.idn, domainEnvelope.idn) &&
        Objects.equals(this.source, domainEnvelope.source) &&
        Objects.equals(this.services, domainEnvelope.services) &&
        Objects.equals(this.debugTime, domainEnvelope.debugTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, idn, source, services, debugTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DomainEnvelope {\n");
    
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    idn: ").append(toIndentedString(idn)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    debugTime: ").append(toIndentedString(debugTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

