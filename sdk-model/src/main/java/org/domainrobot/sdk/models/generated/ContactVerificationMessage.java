/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.GenericStatusConstants;
import org.domainrobot.sdk.models.generated.Message;

import javax.validation.Valid;

/**
 * ContactVerificationMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class ContactVerificationMessage {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("mail")
  private Message mail = null;

  @JsonProperty("status")
  private GenericStatusConstants status = null;

  public ContactVerificationMessage created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public ContactVerificationMessage updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public ContactVerificationMessage mail(Message mail) {
    this.mail = mail;
    return this;
  }

   /**
   * the email of the VerificationMessage
   * @return mail
  **/
  @Valid
  @ApiModelProperty(value = "the email of the VerificationMessage")
  public Message getMail() {
    return mail;
  }

  public void setMail(Message mail) {
    this.mail = mail;
  }

  public ContactVerificationMessage status(GenericStatusConstants status) {
    this.status = status;
    return this;
  }

   /**
   * the status of the VerificationMessage
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "the status of the VerificationMessage")
  public GenericStatusConstants getStatus() {
    return status;
  }

  public void setStatus(GenericStatusConstants status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactVerificationMessage contactVerificationMessage = (ContactVerificationMessage) o;
    return Objects.equals(this.created, contactVerificationMessage.created) &&
        Objects.equals(this.updated, contactVerificationMessage.updated) &&
        Objects.equals(this.mail, contactVerificationMessage.mail) &&
        Objects.equals(this.status, contactVerificationMessage.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, mail, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactVerificationMessage {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    mail: ").append(toIndentedString(mail)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

