/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.CardStatus;
import org.domainrobot.sdk.models.generated.CreditCardVendor;

import javax.validation.Valid;

/**
 * Card
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class Card {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("type")
  private CreditCardVendor type = null;

  @JsonProperty("status")
  private CardStatus status = null;

  @JsonProperty("validFrom")
  private Date validFrom = null;

  @JsonProperty("validTo")
  private Date validTo = null;

  public Card created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Card updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public Card type(CreditCardVendor type) {
    this.type = type;
    return this;
  }

   /**
   * The credit card vendor
   * @return type
  **/
  @Valid
  @ApiModelProperty(value = "The credit card vendor")
  public CreditCardVendor getType() {
    return type;
  }

  public void setType(CreditCardVendor type) {
    this.type = type;
  }

  public Card status(CardStatus status) {
    this.status = status;
    return this;
  }

   /**
   * The actual status of the credit card
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "The actual status of the credit card")
  public CardStatus getStatus() {
    return status;
  }

  public void setStatus(CardStatus status) {
    this.status = status;
  }

  public Card validFrom(Date validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * The valid from date
   * @return validFrom
  **/
  @Valid
  @ApiModelProperty(value = "The valid from date")
  public Date getValidFrom() {
    return validFrom;
  }

  public void setValidFrom(Date validFrom) {
    this.validFrom = validFrom;
  }

  public Card validTo(Date validTo) {
    this.validTo = validTo;
    return this;
  }

   /**
   * The valid to date
   * @return validTo
  **/
  @Valid
  @ApiModelProperty(value = "The valid to date")
  public Date getValidTo() {
    return validTo;
  }

  public void setValidTo(Date validTo) {
    this.validTo = validTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Card card = (Card) o;
    return Objects.equals(this.created, card.created) &&
        Objects.equals(this.updated, card.updated) &&
        Objects.equals(this.type, card.type) &&
        Objects.equals(this.status, card.status) &&
        Objects.equals(this.validFrom, card.validFrom) &&
        Objects.equals(this.validTo, card.validTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, type, status, validFrom, validTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Card {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validTo: ").append(toIndentedString(validTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

