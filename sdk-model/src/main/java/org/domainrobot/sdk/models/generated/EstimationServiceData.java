/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.DomainStudioServiceStatus;
import org.domainrobot.sdk.models.generated.EstimationData;

import javax.validation.Valid;

/**
 * EstimationServiceData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class EstimationServiceData {
  @JsonProperty("debugTime")
  private Long debugTime = null;

  @JsonProperty("status")
  private DomainStudioServiceStatus status = null;

  @JsonProperty("message")
  private String message = null;

  @JsonProperty("data")
  private EstimationData data = null;

  public EstimationServiceData debugTime(Long debugTime) {
    this.debugTime = debugTime;
    return this;
  }

   /**
   * The debug time
   * @return debugTime
  **/
  @ApiModelProperty(value = "The debug time")
  public Long getDebugTime() {
    return debugTime;
  }

  public void setDebugTime(Long debugTime) {
    this.debugTime = debugTime;
  }

  public EstimationServiceData status(DomainStudioServiceStatus status) {
    this.status = status;
    return this;
  }

   /**
   * The status
   * @return status
  **/
  @Valid
  @ApiModelProperty(value = "The status")
  public DomainStudioServiceStatus getStatus() {
    return status;
  }

  public void setStatus(DomainStudioServiceStatus status) {
    this.status = status;
  }

  public EstimationServiceData message(String message) {
    this.message = message;
    return this;
  }

   /**
   * A message with more information, if the status is FAILED.
   * @return message
  **/
  @ApiModelProperty(value = "A message with more information, if the status is FAILED.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public EstimationServiceData data(EstimationData data) {
    this.data = data;
    return this;
  }

   /**
   * The service data
   * @return data
  **/
  @Valid
  @ApiModelProperty(value = "The service data")
  public EstimationData getData() {
    return data;
  }

  public void setData(EstimationData data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimationServiceData estimationServiceData = (EstimationServiceData) o;
    return Objects.equals(this.debugTime, estimationServiceData.debugTime) &&
        Objects.equals(this.status, estimationServiceData.status) &&
        Objects.equals(this.message, estimationServiceData.message) &&
        Objects.equals(this.data, estimationServiceData.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(debugTime, status, message, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimationServiceData {\n");
    
    sb.append("    debugTime: ").append(toIndentedString(debugTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

