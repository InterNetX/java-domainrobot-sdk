/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.ContactExtensions;
import org.domainrobot.sdk.models.generated.ContactProtectionConstants;
import org.domainrobot.sdk.models.generated.ContactReference;
import org.domainrobot.sdk.models.generated.ContactTypeConstants;
import org.domainrobot.sdk.models.generated.GenericStatusConstants;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Contact
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class Contact {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("updater")
  private BasicUser updater = null;

  @JsonProperty("alias")
  private String alias = null;

  @JsonProperty("type")
  private ContactTypeConstants type = null;

  @JsonProperty("organization")
  private String organization = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("protection")
  private ContactProtectionConstants protection = null;

  @JsonProperty("sip")
  private String sip = null;

  @JsonProperty("remarks")
  private List<String> remarks = null;

  @JsonProperty("domainsafe")
  private Boolean domainsafe = null;

  @JsonProperty("confirmOwnerConsent")
  private Boolean confirmOwnerConsent = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("verification")
  private GenericStatusConstants verification = null;

  @JsonProperty("fname")
  private String fname = null;

  @JsonProperty("lname")
  private String lname = null;

  @JsonProperty("address")
  private List<String> address = new ArrayList<String>();

  @JsonProperty("pcode")
  private String pcode = null;

  @JsonProperty("phone")
  private String phone = null;

  @JsonProperty("fax")
  private String fax = null;

  @JsonProperty("nicRef")
  private List<ContactReference> nicRef = null;

  @JsonProperty("extensions")
  private ContactExtensions extensions = null;

  public Contact created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public Contact updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public Contact id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier of the contact
   * @return id
  **/
  @ApiModelProperty(example = "1", value = "The unique identifier of the contact")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Contact owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the object.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the object.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public Contact updater(BasicUser updater) {
    this.updater = updater;
    return this;
  }

   /**
   * The updating user of the object.
   * @return updater
  **/
  @Valid
  @ApiModelProperty(value = "The updating user of the object.")
  public BasicUser getUpdater() {
    return updater;
  }

  public void setUpdater(BasicUser updater) {
    this.updater = updater;
  }

  public Contact alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * The unique alias of the contact
   * @return alias
  **/
  @ApiModelProperty(example = "John-Doe-1", value = "The unique alias of the contact")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public Contact type(ContactTypeConstants type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the contact
   * @return type
  **/
  @NotNull
  @Valid
  @ApiModelProperty(required = true, value = "The type of the contact")
  public ContactTypeConstants getType() {
    return type;
  }

  public void setType(ContactTypeConstants type) {
    this.type = type;
  }

  public Contact organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * The name of the organization
   * @return organization
  **/
  @ApiModelProperty(example = "Company", value = "The name of the organization")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public Contact title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the contact
   * @return title
  **/
  @ApiModelProperty(example = "Dr.", value = "The title of the contact")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Contact city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city of the contact
   * @return city
  **/
  @NotNull
  @ApiModelProperty(example = "Anytown", required = true, value = "The city of the contact")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Contact country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The country of the contact
   * @return country
  **/
  @NotNull
  @ApiModelProperty(example = "DE", required = true, value = "The country of the contact")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public Contact state(String state) {
    this.state = state;
    return this;
  }

   /**
   * The local country state of the contact
   * @return state
  **/
  @ApiModelProperty(example = "BY", value = "The local country state of the contact")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Contact email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The email of the contact
   * @return email
  **/
  @ApiModelProperty(example = "john.doe@domain.com", value = "The email of the contact")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Contact protection(ContactProtectionConstants protection) {
    this.protection = protection;
    return this;
  }

   /**
   * The protection of the contact
   * @return protection
  **/
  @Valid
  @ApiModelProperty(value = "The protection of the contact")
  public ContactProtectionConstants getProtection() {
    return protection;
  }

  public void setProtection(ContactProtectionConstants protection) {
    this.protection = protection;
  }

  public Contact sip(String sip) {
    this.sip = sip;
    return this;
  }

   /**
   * The sip of the contact
   * @return sip
  **/
  @ApiModelProperty(value = "The sip of the contact")
  public String getSip() {
    return sip;
  }

  public void setSip(String sip) {
    this.sip = sip;
  }

  public Contact remarks(List<String> remarks) {
    this.remarks = remarks;
    return this;
  }

  public Contact addRemarksItem(String remarksItem) {
    if (this.remarks == null) {
      this.remarks = new ArrayList<String>();
    }
    this.remarks.add(remarksItem);
    return this;
  }

   /**
   * The remarks of the contact
   * @return remarks
  **/
  @ApiModelProperty(value = "The remarks of the contact")
  public List<String> getRemarks() {
    return remarks;
  }

  public void setRemarks(List<String> remarks) {
    this.remarks = remarks;
  }

  public Contact domainsafe(Boolean domainsafe) {
    this.domainsafe = domainsafe;
    return this;
  }

   /**
   * The nic references of the contact
   * @return domainsafe
  **/
  @ApiModelProperty(value = "The nic references of the contact")
  public Boolean isDomainsafe() {
    return domainsafe;
  }

  public void setDomainsafe(Boolean domainsafe) {
    this.domainsafe = domainsafe;
  }

  public Contact confirmOwnerConsent(Boolean confirmOwnerConsent) {
    this.confirmOwnerConsent = confirmOwnerConsent;
    return this;
  }

   /**
   * ???
   * @return confirmOwnerConsent
  **/
  @ApiModelProperty(value = "???")
  public Boolean isConfirmOwnerConsent() {
    return confirmOwnerConsent;
  }

  public void setConfirmOwnerConsent(Boolean confirmOwnerConsent) {
    this.confirmOwnerConsent = confirmOwnerConsent;
  }

  public Contact comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * The comment for the contact
   * @return comment
  **/
  @ApiModelProperty(value = "The comment for the contact")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Contact verification(GenericStatusConstants verification) {
    this.verification = verification;
    return this;
  }

   /**
   * The verification status of the contact
   * @return verification
  **/
  @Valid
  @ApiModelProperty(value = "The verification status of the contact")
  public GenericStatusConstants getVerification() {
    return verification;
  }

  public void setVerification(GenericStatusConstants verification) {
    this.verification = verification;
  }

  public Contact fname(String fname) {
    this.fname = fname;
    return this;
  }

   /**
   * The first name of the contact
   * @return fname
  **/
  @ApiModelProperty(example = "John", value = "The first name of the contact")
  public String getFname() {
    return fname;
  }

  public void setFname(String fname) {
    this.fname = fname;
  }

  public Contact lname(String lname) {
    this.lname = lname;
    return this;
  }

   /**
   * The last name of the contact
   * @return lname
  **/
  @NotNull
  @ApiModelProperty(example = "Doe", required = true, value = "The last name of the contact")
  public String getLname() {
    return lname;
  }

  public void setLname(String lname) {
    this.lname = lname;
  }

  public Contact address(List<String> address) {
    this.address = address;
    return this;
  }

  public Contact addAddressItem(String addressItem) {
    this.address.add(addressItem);
    return this;
  }

   /**
   * The address of the contact.
   * @return address
  **/
  @NotNull
 @Size(min=1,max=2147483647)  @ApiModelProperty(required = true, value = "The address of the contact.")
  public List<String> getAddress() {
    return address;
  }

  public void setAddress(List<String> address) {
    this.address = address;
  }

  public Contact pcode(String pcode) {
    this.pcode = pcode;
    return this;
  }

   /**
   * The pcode of the contact
   * @return pcode
  **/
  @NotNull
  @ApiModelProperty(example = "12345", required = true, value = "The pcode of the contact")
  public String getPcode() {
    return pcode;
  }

  public void setPcode(String pcode) {
    this.pcode = pcode;
  }

  public Contact phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * The phone number of the contact
   * @return phone
  **/
  @ApiModelProperty(example = "+49-123-12345", value = "The phone number of the contact")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public Contact fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * The fax number of the contact
   * @return fax
  **/
  @ApiModelProperty(example = "+49-123-12345", value = "The fax number of the contact")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public Contact nicRef(List<ContactReference> nicRef) {
    this.nicRef = nicRef;
    return this;
  }

  public Contact addNicRefItem(ContactReference nicRefItem) {
    if (this.nicRef == null) {
      this.nicRef = new ArrayList<ContactReference>();
    }
    this.nicRef.add(nicRefItem);
    return this;
  }

   /**
   * The nic references of the contact
   * @return nicRef
  **/
  @Valid
  @ApiModelProperty(value = "The nic references of the contact")
  public List<ContactReference> getNicRef() {
    return nicRef;
  }

  public void setNicRef(List<ContactReference> nicRef) {
    this.nicRef = nicRef;
  }

  public Contact extensions(ContactExtensions extensions) {
    this.extensions = extensions;
    return this;
  }

   /**
   * The contact extensions.
   * @return extensions
  **/
  @Valid
  @ApiModelProperty(value = "The contact extensions.")
  public ContactExtensions getExtensions() {
    return extensions;
  }

  public void setExtensions(ContactExtensions extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.created, contact.created) &&
        Objects.equals(this.updated, contact.updated) &&
        Objects.equals(this.id, contact.id) &&
        Objects.equals(this.owner, contact.owner) &&
        Objects.equals(this.updater, contact.updater) &&
        Objects.equals(this.alias, contact.alias) &&
        Objects.equals(this.type, contact.type) &&
        Objects.equals(this.organization, contact.organization) &&
        Objects.equals(this.title, contact.title) &&
        Objects.equals(this.city, contact.city) &&
        Objects.equals(this.country, contact.country) &&
        Objects.equals(this.state, contact.state) &&
        Objects.equals(this.email, contact.email) &&
        Objects.equals(this.protection, contact.protection) &&
        Objects.equals(this.sip, contact.sip) &&
        Objects.equals(this.remarks, contact.remarks) &&
        Objects.equals(this.domainsafe, contact.domainsafe) &&
        Objects.equals(this.confirmOwnerConsent, contact.confirmOwnerConsent) &&
        Objects.equals(this.comment, contact.comment) &&
        Objects.equals(this.verification, contact.verification) &&
        Objects.equals(this.fname, contact.fname) &&
        Objects.equals(this.lname, contact.lname) &&
        Objects.equals(this.address, contact.address) &&
        Objects.equals(this.pcode, contact.pcode) &&
        Objects.equals(this.phone, contact.phone) &&
        Objects.equals(this.fax, contact.fax) &&
        Objects.equals(this.nicRef, contact.nicRef) &&
        Objects.equals(this.extensions, contact.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, id, owner, updater, alias, type, organization, title, city, country, state, email, protection, sip, remarks, domainsafe, confirmOwnerConsent, comment, verification, fname, lname, address, pcode, phone, fax, nicRef, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    updater: ").append(toIndentedString(updater)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    protection: ").append(toIndentedString(protection)).append("\n");
    sb.append("    sip: ").append(toIndentedString(sip)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    domainsafe: ").append(toIndentedString(domainsafe)).append("\n");
    sb.append("    confirmOwnerConsent: ").append(toIndentedString(confirmOwnerConsent)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    verification: ").append(toIndentedString(verification)).append("\n");
    sb.append("    fname: ").append(toIndentedString(fname)).append("\n");
    sb.append("    lname: ").append(toIndentedString(lname)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    pcode: ").append(toIndentedString(pcode)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    nicRef: ").append(toIndentedString(nicRef)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

