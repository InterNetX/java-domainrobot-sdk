/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.Message;
import org.domainrobot.sdk.models.generated.NotifyMessage;
import org.domainrobot.sdk.models.generated.ResponseObject;
import org.domainrobot.sdk.models.generated.WorkflowSpool;

import javax.validation.Valid;

/**
 * PollMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class PollMessage {
  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("owner")
  private BasicUser owner = null;

  @JsonProperty("job")
  private WorkflowSpool job = null;

  @JsonProperty("notify")
  private NotifyMessage notify = null;

  @JsonProperty("stid")
  private String stid = null;

  @JsonProperty("ctid")
  private String ctid = null;

  @JsonProperty("messages")
  private List<Message> messages = null;

  @JsonProperty("flags")
  private String flags = null;

  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("object")
  private ResponseObject object = null;

  public PollMessage id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * The message id.
   * @return id
  **/
  @ApiModelProperty(value = "The message id.")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PollMessage owner(BasicUser owner) {
    this.owner = owner;
    return this;
  }

   /**
   * The owner of the message.
   * @return owner
  **/
  @Valid
  @ApiModelProperty(value = "The owner of the message.")
  public BasicUser getOwner() {
    return owner;
  }

  public void setOwner(BasicUser owner) {
    this.owner = owner;
  }

  public PollMessage job(WorkflowSpool job) {
    this.job = job;
    return this;
  }

   /**
   * The job data. Available if the message is a job message
   * @return job
  **/
  @Valid
  @ApiModelProperty(value = "The job data. Available if the message is a job message")
  public WorkflowSpool getJob() {
    return job;
  }

  public void setJob(WorkflowSpool job) {
    this.job = job;
  }

  public PollMessage notify(NotifyMessage notify) {
    this.notify = notify;
    return this;
  }

   /**
   * The notification data. Available if the message is a notification message
   * @return notify
  **/
  @Valid
  @ApiModelProperty(value = "The notification data. Available if the message is a notification message")
  public NotifyMessage getNotify() {
    return notify;
  }

  public void setNotify(NotifyMessage notify) {
    this.notify = notify;
  }

  public PollMessage stid(String stid) {
    this.stid = stid;
    return this;
  }

   /**
   * The server transaction id.
   * @return stid
  **/
  @ApiModelProperty(value = "The server transaction id.")
  public String getStid() {
    return stid;
  }

  public void setStid(String stid) {
    this.stid = stid;
  }

  public PollMessage ctid(String ctid) {
    this.ctid = ctid;
    return this;
  }

   /**
   * the custom transaction id.
   * @return ctid
  **/
  @ApiModelProperty(value = "the custom transaction id.")
  public String getCtid() {
    return ctid;
  }

  public void setCtid(String ctid) {
    this.ctid = ctid;
  }

  public PollMessage messages(List<Message> messages) {
    this.messages = messages;
    return this;
  }

  public PollMessage addMessagesItem(Message messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<Message>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * The general localized messages.
   * @return messages
  **/
  @Valid
  @ApiModelProperty(value = "The general localized messages.")
  public List<Message> getMessages() {
    return messages;
  }

  public void setMessages(List<Message> messages) {
    this.messages = messages;
  }

  public PollMessage flags(String flags) {
    this.flags = flags;
    return this;
  }

   /**
   * Optional message flags.
   * @return flags
  **/
  @ApiModelProperty(value = "Optional message flags.")
  public String getFlags() {
    return flags;
  }

  public void setFlags(String flags) {
    this.flags = flags;
  }

  public PollMessage created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public PollMessage object(ResponseObject object) {
    this.object = object;
    return this;
  }

   /**
   * The object of the job or notify.
   * @return object
  **/
  @Valid
  @ApiModelProperty(value = "The object of the job or notify.")
  public ResponseObject getObject() {
    return object;
  }

  public void setObject(ResponseObject object) {
    this.object = object;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PollMessage pollMessage = (PollMessage) o;
    return Objects.equals(this.id, pollMessage.id) &&
        Objects.equals(this.owner, pollMessage.owner) &&
        Objects.equals(this.job, pollMessage.job) &&
        Objects.equals(this.notify, pollMessage.notify) &&
        Objects.equals(this.stid, pollMessage.stid) &&
        Objects.equals(this.ctid, pollMessage.ctid) &&
        Objects.equals(this.messages, pollMessage.messages) &&
        Objects.equals(this.flags, pollMessage.flags) &&
        Objects.equals(this.created, pollMessage.created) &&
        Objects.equals(this.object, pollMessage.object);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, owner, job, notify, stid, ctid, messages, flags, created, object);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PollMessage {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    notify: ").append(toIndentedString(notify)).append("\n");
    sb.append("    stid: ").append(toIndentedString(stid)).append("\n");
    sb.append("    ctid: ").append(toIndentedString(ctid)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

