/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * ContactIdentificationExtensions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T09:53:42.259+01:00")
public class ContactIdentificationExtensions {
  @JsonProperty("number")
  private String number = null;

  @JsonProperty("authority")
  private String authority = null;

  @JsonProperty("dateOfIssue")
  private Date dateOfIssue = null;

  @JsonProperty("validTill")
  private Date validTill = null;

  public ContactIdentificationExtensions number(String number) {
    this.number = number;
    return this;
  }

   /**
   * The number.
   * @return number
  **/
  @ApiModelProperty(value = "The number.")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public ContactIdentificationExtensions authority(String authority) {
    this.authority = authority;
    return this;
  }

   /**
   * The authority.
   * @return authority
  **/
  @ApiModelProperty(value = "The authority.")
  public String getAuthority() {
    return authority;
  }

  public void setAuthority(String authority) {
    this.authority = authority;
  }

  public ContactIdentificationExtensions dateOfIssue(Date dateOfIssue) {
    this.dateOfIssue = dateOfIssue;
    return this;
  }

   /**
   * The date of issue.
   * @return dateOfIssue
  **/
  @Valid
  @ApiModelProperty(value = "The date of issue.")
  public Date getDateOfIssue() {
    return dateOfIssue;
  }

  public void setDateOfIssue(Date dateOfIssue) {
    this.dateOfIssue = dateOfIssue;
  }

  public ContactIdentificationExtensions validTill(Date validTill) {
    this.validTill = validTill;
    return this;
  }

   /**
   * The valid till date.
   * @return validTill
  **/
  @Valid
  @ApiModelProperty(value = "The valid till date.")
  public Date getValidTill() {
    return validTill;
  }

  public void setValidTill(Date validTill) {
    this.validTill = validTill;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactIdentificationExtensions contactIdentificationExtensions = (ContactIdentificationExtensions) o;
    return Objects.equals(this.number, contactIdentificationExtensions.number) &&
        Objects.equals(this.authority, contactIdentificationExtensions.authority) &&
        Objects.equals(this.dateOfIssue, contactIdentificationExtensions.dateOfIssue) &&
        Objects.equals(this.validTill, contactIdentificationExtensions.validTill);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, authority, dateOfIssue, validTill);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactIdentificationExtensions {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    authority: ").append(toIndentedString(authority)).append("\n");
    sb.append("    dateOfIssue: ").append(toIndentedString(dateOfIssue)).append("\n");
    sb.append("    validTill: ").append(toIndentedString(validTill)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

