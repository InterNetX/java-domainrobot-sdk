/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import org.domainrobot.sdk.models.generated.AddressClaim;
import org.domainrobot.sdk.models.generated.GenderConstants;
import org.domainrobot.sdk.models.generated.Phone;
import org.domainrobot.sdk.models.generated.UrlEntity;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Claims
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-02-13T13:06:11.008+01:00")
public class Claims {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("given_name")
  private String givenName = null;

  @JsonProperty("family_name")
  private String familyName = null;

  @JsonProperty("middle_name")
  private String middleName = null;

  @JsonProperty("nickname")
  private String nickname = null;

  @JsonProperty("preferred_username")
  private String preferredUsername = null;

  @JsonProperty("profile")
  private UrlEntity profile = null;

  @JsonProperty("picture")
  private UrlEntity picture = null;

  @JsonProperty("website")
  private UrlEntity website = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("email_verified")
  private Boolean emailVerified = null;

  @JsonProperty("gender")
  private GenderConstants gender = null;

  @JsonProperty("birthdate")
  private Date birthdate = null;

  @JsonProperty("zoneinfo")
  private String zoneinfo = null;

  @JsonProperty("locale")
  private String locale = null;

  @JsonProperty("phone_number")
  private Phone phoneNumber = null;

  @JsonProperty("phone_number_verified")
  private Boolean phoneNumberVerified = null;

  @JsonProperty("address")
  private AddressClaim address = null;

  @JsonProperty("organization")
  private String organization = null;

  public Claims name(String name) {
    this.name = name;
    return this;
  }

   /**
   * End-User&#39;s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User&#39;s locale and preferences.
   * @return name
  **/
  @ApiModelProperty(value = "End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Claims givenName(String givenName) {
    this.givenName = givenName;
    return this;
  }

   /**
   * Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.
   * @return givenName
  **/
  @ApiModelProperty(value = "Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.")
  public String getGivenName() {
    return givenName;
  }

  public void setGivenName(String givenName) {
    this.givenName = givenName;
  }

  public Claims familyName(String familyName) {
    this.familyName = familyName;
    return this;
  }

   /**
   * Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters
   * @return familyName
  **/
  @ApiModelProperty(value = "Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters")
  public String getFamilyName() {
    return familyName;
  }

  public void setFamilyName(String familyName) {
    this.familyName = familyName;
  }

  public Claims middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.
   * @return middleName
  **/
  @ApiModelProperty(value = "Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public Claims nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.
   * @return nickname
  **/
  @ApiModelProperty(value = "Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public Claims preferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
    return this;
  }

   /**
   * Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace
   * @return preferredUsername
  **/
  @ApiModelProperty(value = "Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace")
  public String getPreferredUsername() {
    return preferredUsername;
  }

  public void setPreferredUsername(String preferredUsername) {
    this.preferredUsername = preferredUsername;
  }

  public Claims profile(UrlEntity profile) {
    this.profile = profile;
    return this;
  }

   /**
   * URL of the End-User&#39;s profile page. The contents of this Web page SHOULD be about the End-User.
   * @return profile
  **/
  @Valid
  @ApiModelProperty(value = "URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.")
  public UrlEntity getProfile() {
    return profile;
  }

  public void setProfile(UrlEntity profile) {
    this.profile = profile;
  }

  public Claims picture(UrlEntity picture) {
    this.picture = picture;
    return this;
  }

   /**
   * URL of the End-User&#39;s profile picture.
   * @return picture
  **/
  @Valid
  @ApiModelProperty(value = "URL of the End-User's profile picture.")
  public UrlEntity getPicture() {
    return picture;
  }

  public void setPicture(UrlEntity picture) {
    this.picture = picture;
  }

  public Claims website(UrlEntity website) {
    this.website = website;
    return this;
  }

   /**
   * URL of the End-User&#39;s Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.
   * @return website
  **/
  @Valid
  @ApiModelProperty(value = "URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.")
  public UrlEntity getWebsite() {
    return website;
  }

  public void setWebsite(UrlEntity website) {
    this.website = website;
  }

  public Claims email(String email) {
    this.email = email;
    return this;
  }

   /**
   * End-user&#39;s preferred email address
   * @return email
  **/
  @ApiModelProperty(example = "john.doe@domain.com", value = "End-user's preferred email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Claims emailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * True if the End-User&#39;s e-mail address has been verified; otherwise false.
   * @return emailVerified
  **/
  @ApiModelProperty(value = "True if the End-User's e-mail address has been verified; otherwise false.")
  public Boolean isEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }

  public Claims gender(GenderConstants gender) {
    this.gender = gender;
    return this;
  }

   /**
   * URL of the End-User&#39;s profile picture.
   * @return gender
  **/
  @Valid
  @ApiModelProperty(value = "URL of the End-User's profile picture.")
  public GenderConstants getGender() {
    return gender;
  }

  public void setGender(GenderConstants gender) {
    this.gender = gender;
  }

  public Claims birthdate(Date birthdate) {
    this.birthdate = birthdate;
    return this;
  }

   /**
   * End-user&#39;s birth date, ISO 8601:2004 (YYYY-MM-DD)
   * @return birthdate
  **/
  @Valid
  @ApiModelProperty(example = "2019-12-30", value = "End-user's birth date, ISO 8601:2004 (YYYY-MM-DD)")
  public Date getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(Date birthdate) {
    this.birthdate = birthdate;
  }

  public Claims zoneinfo(String zoneinfo) {
    this.zoneinfo = zoneinfo;
    return this;
  }

   /**
   * End-User&#39;s zoneinfo.
   * @return zoneinfo
  **/
  @ApiModelProperty(value = "End-User's zoneinfo.")
  public String getZoneinfo() {
    return zoneinfo;
  }

  public void setZoneinfo(String zoneinfo) {
    this.zoneinfo = zoneinfo;
  }

  public Claims locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * The locale.
   * @return locale
  **/
  @ApiModelProperty(value = "The locale.")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public Claims phoneNumber(Phone phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * End-User&#39;s preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. .
   * @return phoneNumber
  **/
  @Valid
  @ApiModelProperty(value = "End-User's preferred telephone number. E.164 [E.164] is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. .")
  public Phone getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(Phone phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public Claims phoneNumberVerified(Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
    return this;
  }

   /**
   * True if the End-User&#39;s phne number has been verified; otherwise false.
   * @return phoneNumberVerified
  **/
  @ApiModelProperty(value = "True if the End-User's phne number has been verified; otherwise false.")
  public Boolean isPhoneNumberVerified() {
    return phoneNumberVerified;
  }

  public void setPhoneNumberVerified(Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
  }

  public Claims address(AddressClaim address) {
    this.address = address;
    return this;
  }

   /**
   * End-user&#39;s address
   * @return address
  **/
  @Valid
  @ApiModelProperty(value = "End-user's address")
  public AddressClaim getAddress() {
    return address;
  }

  public void setAddress(AddressClaim address) {
    this.address = address;
  }

  public Claims organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * End-user&#39;s organization
   * @return organization
  **/
  @ApiModelProperty(value = "End-user's organization")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Claims claims = (Claims) o;
    return Objects.equals(this.name, claims.name) &&
        Objects.equals(this.givenName, claims.givenName) &&
        Objects.equals(this.familyName, claims.familyName) &&
        Objects.equals(this.middleName, claims.middleName) &&
        Objects.equals(this.nickname, claims.nickname) &&
        Objects.equals(this.preferredUsername, claims.preferredUsername) &&
        Objects.equals(this.profile, claims.profile) &&
        Objects.equals(this.picture, claims.picture) &&
        Objects.equals(this.website, claims.website) &&
        Objects.equals(this.email, claims.email) &&
        Objects.equals(this.emailVerified, claims.emailVerified) &&
        Objects.equals(this.gender, claims.gender) &&
        Objects.equals(this.birthdate, claims.birthdate) &&
        Objects.equals(this.zoneinfo, claims.zoneinfo) &&
        Objects.equals(this.locale, claims.locale) &&
        Objects.equals(this.phoneNumber, claims.phoneNumber) &&
        Objects.equals(this.phoneNumberVerified, claims.phoneNumberVerified) &&
        Objects.equals(this.address, claims.address) &&
        Objects.equals(this.organization, claims.organization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, givenName, familyName, middleName, nickname, preferredUsername, profile, picture, website, email, emailVerified, gender, birthdate, zoneinfo, locale, phoneNumber, phoneNumberVerified, address, organization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Claims {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    preferredUsername: ").append(toIndentedString(preferredUsername)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    zoneinfo: ").append(toIndentedString(zoneinfo)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneNumberVerified: ").append(toIndentedString(phoneNumberVerified)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

