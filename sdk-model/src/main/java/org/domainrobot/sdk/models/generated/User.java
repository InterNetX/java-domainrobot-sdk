/*
 * Domainrobot JSON API
 * Domainrobot JSON API for managing: Domains, SSL            Certificates, DNS and            much more.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.domainrobot.sdk.models.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.validation.constraints.*;

import org.domainrobot.sdk.models.generated.AuthType;
import org.domainrobot.sdk.models.generated.BasicCustomer;
import org.domainrobot.sdk.models.generated.BasicUser;
import org.domainrobot.sdk.models.generated.Subscription;
import org.domainrobot.sdk.models.generated.TrustedApplication;
import org.domainrobot.sdk.models.generated.User;
import org.domainrobot.sdk.models.generated.UserAcls;
import org.domainrobot.sdk.models.generated.UserDetails;
import org.domainrobot.sdk.models.generated.UserLock;
import org.domainrobot.sdk.models.generated.UserProfileViews;
import org.domainrobot.sdk.models.generated.VirtualNameServerGroup;

import javax.validation.Valid;

/**
 * User
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-08T13:30:26.488+01:00")
public class User {
  @JsonProperty("created")
  private Date created = null;

  @JsonProperty("updated")
  private Date updated = null;

  @JsonProperty("context")
  private Integer context = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("defaultEmail")
  private String defaultEmail = null;

  @JsonProperty("status")
  private Integer status = null;

  @JsonProperty("substatus")
  private Integer substatus = null;

  @JsonProperty("authType")
  private AuthType authType = null;

  @JsonProperty("details")
  private UserDetails details = null;

  @JsonProperty("lock")
  private UserLock lock = null;

  @JsonProperty("acls")
  private UserAcls acls = null;

  @JsonProperty("profiles")
  private UserProfileViews profiles = null;

  @JsonProperty("ancestors")
  private List<BasicUser> ancestors = null;

  @JsonProperty("customer")
  private BasicCustomer customer = null;

  @JsonProperty("nameServerGroups")
  private List<VirtualNameServerGroup> nameServerGroups = null;

  @JsonProperty("subscriptions")
  private List<Subscription> subscriptions = null;

  @JsonProperty("applications")
  private List<TrustedApplication> applications = null;

  @JsonProperty("user")
  private String user = null;

  @JsonProperty("language")
  private String language = null;

  @JsonProperty("parent")
  private User parent = null;

  public User created(Date created) {
    this.created = created;
    return this;
  }

   /**
   * The user created date.
   * @return created
  **/
  @Valid
  @ApiModelProperty(value = "The user created date.")
  public Date getCreated() {
    return created;
  }

  public void setCreated(Date created) {
    this.created = created;
  }

  public User updated(Date updated) {
    this.updated = updated;
    return this;
  }

   /**
   * The user updated date.
   * @return updated
  **/
  @Valid
  @ApiModelProperty(value = "The user updated date.")
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public User context(Integer context) {
    this.context = context;
    return this;
  }

   /**
   * The context.
   * @return context
  **/
  @NotNull
  @ApiModelProperty(required = true, value = "The context.")
  public Integer getContext() {
    return context;
  }

  public void setContext(Integer context) {
    this.context = context;
  }

  public User password(String password) {
    this.password = password;
    return this;
  }

   /**
   * The password.
   * @return password
  **/
  @ApiModelProperty(value = "The password.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public User defaultEmail(String defaultEmail) {
    this.defaultEmail = defaultEmail;
    return this;
  }

   /**
   * The default email.
   * @return defaultEmail
  **/
  @ApiModelProperty(value = "The default email.")
  public String getDefaultEmail() {
    return defaultEmail;
  }

  public void setDefaultEmail(String defaultEmail) {
    this.defaultEmail = defaultEmail;
  }

  public User status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * The status.
   * @return status
  **/
  @ApiModelProperty(value = "The status.")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public User substatus(Integer substatus) {
    this.substatus = substatus;
    return this;
  }

   /**
   * The substatus.
   * @return substatus
  **/
  @ApiModelProperty(value = "The substatus.")
  public Integer getSubstatus() {
    return substatus;
  }

  public void setSubstatus(Integer substatus) {
    this.substatus = substatus;
  }

  public User authType(AuthType authType) {
    this.authType = authType;
    return this;
  }

   /**
   * The users authorization method.
   * @return authType
  **/
  @Valid
  @ApiModelProperty(value = "The users authorization method.")
  public AuthType getAuthType() {
    return authType;
  }

  public void setAuthType(AuthType authType) {
    this.authType = authType;
  }

  public User details(UserDetails details) {
    this.details = details;
    return this;
  }

   /**
   * The user details.
   * @return details
  **/
  @Valid
  @ApiModelProperty(value = "The user details.")
  public UserDetails getDetails() {
    return details;
  }

  public void setDetails(UserDetails details) {
    this.details = details;
  }

  public User lock(UserLock lock) {
    this.lock = lock;
    return this;
  }

   /**
   * The lock status of the user.
   * @return lock
  **/
  @Valid
  @ApiModelProperty(value = "The lock status of the user.")
  public UserLock getLock() {
    return lock;
  }

  public void setLock(UserLock lock) {
    this.lock = lock;
  }

  public User acls(UserAcls acls) {
    this.acls = acls;
    return this;
  }

   /**
   * Wrapper for the user acls.
   * @return acls
  **/
  @Valid
  @ApiModelProperty(value = "Wrapper for the user acls.")
  public UserAcls getAcls() {
    return acls;
  }

  public void setAcls(UserAcls acls) {
    this.acls = acls;
  }

  public User profiles(UserProfileViews profiles) {
    this.profiles = profiles;
    return this;
  }

   /**
   * Wrapper for the user profiles.
   * @return profiles
  **/
  @Valid
  @ApiModelProperty(value = "Wrapper for the user profiles.")
  public UserProfileViews getProfiles() {
    return profiles;
  }

  public void setProfiles(UserProfileViews profiles) {
    this.profiles = profiles;
  }

  public User ancestors(List<BasicUser> ancestors) {
    this.ancestors = ancestors;
    return this;
  }

  public User addAncestorsItem(BasicUser ancestorsItem) {
    if (this.ancestors == null) {
      this.ancestors = new ArrayList<BasicUser>();
    }
    this.ancestors.add(ancestorsItem);
    return this;
  }

   /**
   * The ancestors of the user.
   * @return ancestors
  **/
  @Valid
  @ApiModelProperty(value = "The ancestors of the user.")
  public List<BasicUser> getAncestors() {
    return ancestors;
  }

  public void setAncestors(List<BasicUser> ancestors) {
    this.ancestors = ancestors;
  }

  public User customer(BasicCustomer customer) {
    this.customer = customer;
    return this;
  }

   /**
   * The customer belonging to the user.
   * @return customer
  **/
  @Valid
  @ApiModelProperty(value = "The customer belonging to the user.")
  public BasicCustomer getCustomer() {
    return customer;
  }

  public void setCustomer(BasicCustomer customer) {
    this.customer = customer;
  }

  public User nameServerGroups(List<VirtualNameServerGroup> nameServerGroups) {
    this.nameServerGroups = nameServerGroups;
    return this;
  }

  public User addNameServerGroupsItem(VirtualNameServerGroup nameServerGroupsItem) {
    if (this.nameServerGroups == null) {
      this.nameServerGroups = new ArrayList<VirtualNameServerGroup>();
    }
    this.nameServerGroups.add(nameServerGroupsItem);
    return this;
  }

   /**
   * The available name server groups
   * @return nameServerGroups
  **/
  @Valid
  @ApiModelProperty(value = "The available name server groups")
  public List<VirtualNameServerGroup> getNameServerGroups() {
    return nameServerGroups;
  }

  public void setNameServerGroups(List<VirtualNameServerGroup> nameServerGroups) {
    this.nameServerGroups = nameServerGroups;
  }

  public User subscriptions(List<Subscription> subscriptions) {
    this.subscriptions = subscriptions;
    return this;
  }

  public User addSubscriptionsItem(Subscription subscriptionsItem) {
    if (this.subscriptions == null) {
      this.subscriptions = new ArrayList<Subscription>();
    }
    this.subscriptions.add(subscriptionsItem);
    return this;
  }

   /**
   * Wrapper for the subscriptions.
   * @return subscriptions
  **/
  @Valid
  @ApiModelProperty(value = "Wrapper for the subscriptions.")
  public List<Subscription> getSubscriptions() {
    return subscriptions;
  }

  public void setSubscriptions(List<Subscription> subscriptions) {
    this.subscriptions = subscriptions;
  }

  public User applications(List<TrustedApplication> applications) {
    this.applications = applications;
    return this;
  }

  public User addApplicationsItem(TrustedApplication applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<TrustedApplication>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

   /**
   * Holds the used applications.
   * @return applications
  **/
  @Valid
  @ApiModelProperty(value = "Holds the used applications.")
  public List<TrustedApplication> getApplications() {
    return applications;
  }

  public void setApplications(List<TrustedApplication> applications) {
    this.applications = applications;
  }

  public User user(String user) {
    this.user = user;
    return this;
  }

   /**
   * The user name.
   * @return user
  **/
  @NotNull
 @Pattern(regexp="^[^_].*")  @ApiModelProperty(required = true, value = "The user name.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public User language(String language) {
    this.language = language;
    return this;
  }

   /**
   * The language.
   * @return language
  **/
  @ApiModelProperty(value = "The language.")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public User parent(User parent) {
    this.parent = parent;
    return this;
  }

   /**
   * The parent.
   * @return parent
  **/
  @Valid
  @ApiModelProperty(value = "The parent.")
  public User getParent() {
    return parent;
  }

  public void setParent(User parent) {
    this.parent = parent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.created, user.created) &&
        Objects.equals(this.updated, user.updated) &&
        Objects.equals(this.context, user.context) &&
        Objects.equals(this.password, user.password) &&
        Objects.equals(this.defaultEmail, user.defaultEmail) &&
        Objects.equals(this.status, user.status) &&
        Objects.equals(this.substatus, user.substatus) &&
        Objects.equals(this.authType, user.authType) &&
        Objects.equals(this.details, user.details) &&
        Objects.equals(this.lock, user.lock) &&
        Objects.equals(this.acls, user.acls) &&
        Objects.equals(this.profiles, user.profiles) &&
        Objects.equals(this.ancestors, user.ancestors) &&
        Objects.equals(this.customer, user.customer) &&
        Objects.equals(this.nameServerGroups, user.nameServerGroups) &&
        Objects.equals(this.subscriptions, user.subscriptions) &&
        Objects.equals(this.applications, user.applications) &&
        Objects.equals(this.user, user.user) &&
        Objects.equals(this.language, user.language) &&
        Objects.equals(this.parent, user.parent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(created, updated, context, password, defaultEmail, status, substatus, authType, details, lock, acls, profiles, ancestors, customer, nameServerGroups, subscriptions, applications, user, language, parent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    defaultEmail: ").append(toIndentedString(defaultEmail)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    substatus: ").append(toIndentedString(substatus)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    acls: ").append(toIndentedString(acls)).append("\n");
    sb.append("    profiles: ").append(toIndentedString(profiles)).append("\n");
    sb.append("    ancestors: ").append(toIndentedString(ancestors)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    nameServerGroups: ").append(toIndentedString(nameServerGroups)).append("\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

